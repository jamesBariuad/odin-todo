(()=>{"use strict";var e={663:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(537),o=n.n(r),a=n(645),c=n.n(a)()(o());c.push([e.id,'[contentEditable="true"]:empty:not(:focus):before {\n  content: attr(data-text);\n}\n\n.active-button{\n    background-color: red;\n}\n',"",{version:3,sources:["webpack://./src/assets/css/handleAddTask.css"],names:[],mappings:"AAAA;EACE,wBAAwB;AAC1B;;AAEA;IACI,qBAAqB;AACzB",sourcesContent:['[contentEditable="true"]:empty:not(:focus):before {\n  content: attr(data-text);\n}\n\n.active-button{\n    background-color: red;\n}\n'],sourceRoot:""}]);const i=c},158:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(537),o=n.n(r),a=n(645),c=n.n(a)()(o());c.push([e.id,"*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody{\n    background-color: green;\n    min-height: 100vh;\n    display: grid;\n    grid-template-columns: 2fr 10fr;\n    grid-template-rows: 1fr 10fr 1fr;\n}\n\nheader{\n    grid-column: span 2;\n}\n\nmain{\n    display: grid;\n    grid-template-columns: 300px  1fr;\n    grid-column: span 2;\n}\n\n#sidebar{\n display: grid;\n grid-auto-rows: 50px;\n\n /* gap: 10px; */\n}\n\nfooter{\n    margin-top: auto;\n}","",{version:3,sources:["webpack://./src/assets/css/layout.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,uBAAuB;IACvB,iBAAiB;IACjB,aAAa;IACb,+BAA+B;IAC/B,gCAAgC;AACpC;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,iCAAiC;IACjC,mBAAmB;AACvB;;AAEA;CACC,aAAa;CACb,oBAAoB;;CAEpB,eAAe;AAChB;;AAEA;IACI,gBAAgB;AACpB",sourcesContent:["*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody{\n    background-color: green;\n    min-height: 100vh;\n    display: grid;\n    grid-template-columns: 2fr 10fr;\n    grid-template-rows: 1fr 10fr 1fr;\n}\n\nheader{\n    grid-column: span 2;\n}\n\nmain{\n    display: grid;\n    grid-template-columns: 300px  1fr;\n    grid-column: span 2;\n}\n\n#sidebar{\n display: grid;\n grid-auto-rows: 50px;\n\n /* gap: 10px; */\n}\n\nfooter{\n    margin-top: auto;\n}"],sourceRoot:""}]);const i=c},209:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(537),o=n.n(r),a=n(645),c=n.n(a)()(o());c.push([e.id,"#pop-up {\n    position: absolute;\n    bottom: 5em;\n    left: 2em;\n}","",{version:3,sources:["webpack://./src/assets/css/taskCompletePopup.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,WAAW;IACX,SAAS;AACb",sourcesContent:["#pop-up {\n    position: absolute;\n    bottom: 5em;\n    left: 2em;\n}"],sourceRoot:""}]);const i=c},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(r)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(c[s]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);r&&c[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var a={},c=[],i=0;i<e.length;i++){var s=e[i],d=r.base?s[0]+r.base:s[0],l=a[d]||0,u="".concat(d," ").concat(l);a[d]=l+1;var m=n(u),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==m)t[m].references++,t[m].updater(p);else{var A=o(p,r);r.byIndex=i,t.splice(i,0,{identifier:u,updater:A,references:1})}c.push(u)}return c}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var c=0;c<a.length;c++){var i=n(a[c]);t[i].references--}for(var s=r(e,o),d=0;d<a.length;d++){var l=n(a[d]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}a=s}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={id:r,exports:{}};return e[r](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{const e=e=>{document.querySelector("main-content");const n=document.createElement("div");n.id="pop-up",n.textContent="1 task completed!   ";const r=document.createElement("span");r.textContent="undo",r.addEventListener("click",(()=>((e,n)=>{console.log(JSON.parse(e));const r=JSON.parse(e);localStorage.setItem(r.title,e),t(),n.remove()})(e,n))),n.append(r),setTimeout((()=>{n.remove()}),2e3),document.body.append(n)};function t(){const e=document.querySelector("#main-content");let t=[];return e.replaceChildren(),r(t),o(t,e),e.append(C()),e}const r=e=>{for(let t=0;t<=localStorage.length-1;t++){const n=JSON.parse(localStorage.getItem(localStorage.key(t)));if(!n.title)return;e.push(n)}return e.sort((function(e,t){return e.dateAdded<t.dateAdded?-1:e.dateAdded>t.dateAdded?1:0})),e},o=(e,t)=>{for(let n=0;n<e.length;n++){const r=a(e[n]);t.append(r)}return t},a=n=>{const r=document.createElement("div");r.id=n.title;const o=document.createElement("div"),a=document.createElement("div"),c=document.createElement("div"),i=document.createElement("div"),s=document.createElement("input");return s.type="checkbox",s.addEventListener("click",(n=>(n=>{const r=document.querySelector("#main-content"),o=localStorage.getItem(n.target.parentElement.id);localStorage.removeItem(n.target.parentElement.id),e(o),r.replaceChildren(),t()})(n))),o.innerHTML=`Task:${n.title}`,a.innerHTML=`details:${n.description}`,c.textContent=`Due date:${n.dueDate}`,i.textContent=`Priority:${n.priority}`,r.append(s,o,a,c,i),r};function c(){const e=document.querySelector(".add-task"),t=document.createElement("div");return t.id="task-form",t.append(i(),s(),d(),l(),m(),p()),e.replaceWith(t),e}const i=()=>{const e=document.createElement("div");return e.setAttribute("contentEditable","true"),e.setAttribute("data-text","Task Name"),e},s=()=>{const e=document.createElement("div");return e.setAttribute("contentEditable","true"),e.setAttribute("data-text","Task Description"),e},d=()=>{let e="";const t=document.createElement("div");t.textContent="Due Date:";const n=document.createElement("input");return n.setAttribute("type","date"),n.addEventListener("change",(t=>(t=>{e=t.target.value})(t))),t.append(n),t},l=()=>{const e=document.createElement("div");e.textContent="Priority:";const t=document.createElement("button"),n=document.createElement("button"),r=document.createElement("button");t.textContent="low",n.textContent="medium",r.textContent="high";const o=e=>{let o="";return t.classList.remove("active-button"),n.classList.remove("active-button"),r.classList.remove("active-button"),"low"==e.target.innerText?t.classList.add("active-button"):"medium"==e.target.innerText?n.classList.add("active-button"):r.classList.add("active-button"),o=e.target.innerText,o};return t.addEventListener("click",(e=>o(e))),n.addEventListener("click",(e=>o(e))),r.addEventListener("click",(e=>o(e))),e.append(t,n,r),e},u=()=>{const e=document.querySelector("#main-content"),n=document.querySelector('[data-text="Task Name"]'),r=document.querySelector('[data-text="Task Description"]'),o=document.querySelector('input[type="date"]'),a=document.querySelector('button[class="active-button"]');let c="",i="";if(!n.innerHTML)return alert("please fill Task Name field");if(c=o.value?o.value:"no due date",i=a?a.innerHTML:"no priority set",null!==localStorage.getItem(`${n.innerHTML}`))return alert(`Task ${n.innerHTML} already exist!`);const s=(new Date).toISOString(),d=((e,t,n,r,o)=>({title:e,description:t,dueDate:n,priority:r,dateAdded:o}))(`${n.textContent}`,`${r.textContent}`,`${c}`,`${i}`,s);localStorage.setItem(`${n.textContent}`,JSON.stringify(d)),e.replaceChildren(),t()},m=()=>{const e=document.createElement("button");return e.textContent="add",e.addEventListener("click",u),e},p=()=>{const e=document.createElement("button");return e.textContent="cancel",e.addEventListener("click",(()=>{const e=C();document.querySelector("#task-form").replaceWith(e)})),e},A=e=>{const t=document.querySelector("#main-content"),n=document.createElement("div");return n.textContent=e,t.replaceChildren(),t.append(n),t},f=()=>{const e=document.querySelector("#sidebar-projects"),t=JSON.parse(localStorage.getItem("Projects"));if(t){e.replaceChildren(),e.textContent="Projects";for(let n=0;n<t.length;n++){console.log(t[n].title);const r=document.createElement("div");r.textContent=t[n].title,e.append(r)}e.append(g())}},v=(e,t)=>{const n=document.createElement("div");n.id="add-project-input";const r=document.createElement("input");r.id="input-project-name";const o=document.createElement("button");o.addEventListener("click",(()=>((e,t,n)=>{const r=localStorage.getItem("Projects"),o=e.value;if(!o)return alert("Project name can't be empty");if(r){const e=JSON.parse(r);if(1==e.some((e=>e.title==o)))return alert("Project name already exist!");const t={title:o,tasks:[]};localStorage.setItem("Projects",JSON.stringify([...e,t]))}else localStorage.setItem("Projects",JSON.stringify([{title:o,tasks:[]}]));f(),A(o),(e=>{const t=document.querySelector("#main-content");t.replaceChildren(),A(e),document.createElement("div"),JSON.parse(localStorage.getItem(e))||t.append(C())})(o),t.replaceWith(n)})(r,n,t))),o.textContent="add";const a=document.createElement("button");a.textContent="cancel",a.addEventListener("click",(()=>((e,t)=>{e.replaceWith(t)})(n,t))),n.textContent="Project Name:",n.append(r,o,a),e.target.replaceWith(n)};function g(){const e=document.createElement("div");return e.textContent="Add Project",e.id="add-project",e.addEventListener("click",(t=>v(t,e))),e}function C(){const e=document.createElement("div");return e.textContent="Add a Task",e.classList.add("add-task"),e.addEventListener("click",c),e}var b=n(379),y=n.n(b),E=n(795),h=n.n(E),x=n(569),S=n.n(x),I=n(565),k=n.n(I),T=n(216),B=n.n(T),L=n(589),j=n.n(L),w=n(158),P={};P.styleTagTransform=j(),P.setAttributes=k(),P.insert=S().bind(null,"head"),P.domAPI=h(),P.insertStyleElement=B(),y()(w.Z,P),w.Z&&w.Z.locals&&w.Z.locals;var N=n(663),q={};q.styleTagTransform=j(),q.setAttributes=k(),q.insert=S().bind(null,"head"),q.domAPI=h(),q.insertStyleElement=B(),y()(N.Z,q),N.Z&&N.Z.locals&&N.Z.locals;var M=n(209),O={};O.styleTagTransform=j(),O.setAttributes=k(),O.insert=S().bind(null,"head"),O.domAPI=h(),O.insertStyleElement=B(),y()(M.Z,O),M.Z&&M.Z.locals&&M.Z.locals,function(){document.body.replaceChildren();const e=document.querySelector("body"),n=document.createElement("main");n.append(function(){const e=document.createElement("div");e.id="sidebar";const t=document.createElement("div");t.textContent="Home";const n=document.createElement("div");n.textContent="Today";const r=document.createElement("div");r.textContent="Week";const o=document.createElement("div");return o.textContent="Projects",o.id="sidebar-projects",o.append(g()),e.append(t,n,r,o),e}(),function(){const e=document.createElement("div");return e.id="main-content",e.replaceChildren(),e}()),e.append(function(){const e=document.createElement("header"),t=document.createElement("div");return t.textContent=" To-do List",e.append(t),e}(),n,function(){const e=document.createElement("footer");return e.textContent="copyright 2023",e}()),t()}(),t(),f()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,