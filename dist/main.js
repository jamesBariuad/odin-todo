(()=>{"use strict";var e={663:(e,t,n)=>{n.d(t,{Z:()=>i});var o=n(537),r=n.n(o),a=n(645),c=n.n(a)()(r());c.push([e.id,'[contentEditable="true"]:empty:not(:focus):before {\n  content: attr(data-text);\n}\n\n.active-button{\n    background-color: red;\n}\n',"",{version:3,sources:["webpack://./src/assets/css/handleAddTask.css"],names:[],mappings:"AAAA;EACE,wBAAwB;AAC1B;;AAEA;IACI,qBAAqB;AACzB",sourcesContent:['[contentEditable="true"]:empty:not(:focus):before {\n  content: attr(data-text);\n}\n\n.active-button{\n    background-color: red;\n}\n'],sourceRoot:""}]);const i=c},158:(e,t,n)=>{n.d(t,{Z:()=>i});var o=n(537),r=n.n(o),a=n(645),c=n.n(a)()(r());c.push([e.id,"*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody{\n    background-color: green;\n    min-height: 100vh;\n    display: grid;\n    grid-template-columns: 2fr 10fr;\n    grid-template-rows: 1fr 10fr 1fr;\n}\n\nheader{\n    grid-column: span 2;\n}\n\nmain{\n    display: grid;\n    grid-template-columns: 300px  1fr;\n    grid-column: span 2;\n}\n\n#sidebar{\n display: grid;\n grid-auto-rows: 50px;\n\n /* gap: 10px; */\n}\n\nfooter{\n    margin-top: auto;\n}","",{version:3,sources:["webpack://./src/assets/css/layout.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,uBAAuB;IACvB,iBAAiB;IACjB,aAAa;IACb,+BAA+B;IAC/B,gCAAgC;AACpC;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,iCAAiC;IACjC,mBAAmB;AACvB;;AAEA;CACC,aAAa;CACb,oBAAoB;;CAEpB,eAAe;AAChB;;AAEA;IACI,gBAAgB;AACpB",sourcesContent:["*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody{\n    background-color: green;\n    min-height: 100vh;\n    display: grid;\n    grid-template-columns: 2fr 10fr;\n    grid-template-rows: 1fr 10fr 1fr;\n}\n\nheader{\n    grid-column: span 2;\n}\n\nmain{\n    display: grid;\n    grid-template-columns: 300px  1fr;\n    grid-column: span 2;\n}\n\n#sidebar{\n display: grid;\n grid-auto-rows: 50px;\n\n /* gap: 10px; */\n}\n\nfooter{\n    margin-top: auto;\n}"],sourceRoot:""}]);const i=c},209:(e,t,n)=>{n.d(t,{Z:()=>i});var o=n(537),r=n.n(o),a=n(645),c=n.n(a)()(r());c.push([e.id,"#pop-up {\n    position: absolute;\n    bottom: 5em;\n    left: 2em;\n}","",{version:3,sources:["webpack://./src/assets/css/taskCompletePopup.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,WAAW;IACX,SAAS;AACb",sourcesContent:["#pop-up {\n    position: absolute;\n    bottom: 5em;\n    left: 2em;\n}"],sourceRoot:""}]);const i=c},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(o)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(c[s]=!0)}for(var d=0;d<e.length;d++){var u=[].concat(e[d]);o&&c[u[0]]||(void 0!==a&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=a),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),r&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=r):u[4]="".concat(r)),t.push(u))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var a={},c=[],i=0;i<e.length;i++){var s=e[i],d=o.base?s[0]+o.base:s[0],u=a[d]||0,l="".concat(d," ").concat(u);a[d]=u+1;var m=n(l),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==m)t[m].references++,t[m].updater(p);else{var A=r(p,o);o.byIndex=i,t.splice(i,0,{identifier:l,updater:A,references:1})}c.push(l)}return c}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var c=0;c<a.length;c++){var i=n(a[c]);t[i].references--}for(var s=o(e,r),d=0;d<a.length;d++){var u=n(a[d]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}a=s}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return e[o](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{const e=e=>{document.querySelector("main-content");const n=document.createElement("div");n.id="pop-up",n.textContent="1 task completed!   ";const o=document.createElement("span");o.textContent="undo",o.addEventListener("click",(()=>((e,n)=>{console.log(JSON.parse(e));const o=JSON.parse(e);localStorage.setItem(o.title,e),t(),n.remove()})(e,n))),n.append(o),setTimeout((()=>{n.remove()}),2e3),document.body.append(n)};function t(){const e=document.querySelector("#main-content");let t=[];return e.replaceChildren(),o(t),r(t,e),e.append(v()),e}const o=e=>{for(let t=0;t<=localStorage.length-1;t++){const n=JSON.parse(localStorage.getItem(localStorage.key(t)));e.push(n)}return e.sort((function(e,t){return e.dateAdded<t.dateAdded?-1:e.dateAdded>t.dateAdded?1:0})),e},r=(e,t)=>{for(let n=0;n<e.length;n++){const o=a(e[n]);t.append(o)}return t},a=n=>{const o=document.createElement("div");o.id=n.title;const r=document.createElement("div"),a=document.createElement("div"),c=document.createElement("div"),i=document.createElement("div"),s=document.createElement("input");return s.type="checkbox",s.addEventListener("click",(n=>(n=>{const o=document.querySelector("#main-content"),r=localStorage.getItem(n.target.parentElement.id);localStorage.removeItem(n.target.parentElement.id),e(r),o.replaceChildren(),t()})(n))),r.innerHTML=`Task:${n.title}`,a.innerHTML=`details:${n.description}`,c.textContent=`Due date:${n.dueDate}`,i.textContent=`Priority:${n.priority}`,o.append(s,r,a,c,i),o};function c(){const e=document.querySelector(".add-task"),t=document.createElement("div");return t.id="task-form",t.append(i(),s(),d(),u(),m(),p()),e.replaceWith(t),e}const i=()=>{const e=document.createElement("div");return e.setAttribute("contentEditable","true"),e.setAttribute("data-text","Task Name"),e},s=()=>{const e=document.createElement("div");return e.setAttribute("contentEditable","true"),e.setAttribute("data-text","Task Description"),e},d=()=>{let e="";const t=document.createElement("div");t.textContent="Due Date:";const n=document.createElement("input");return n.setAttribute("type","date"),n.addEventListener("change",(t=>(t=>{e=t.target.value})(t))),t.append(n),t},u=()=>{const e=document.createElement("div");e.textContent="Priority:";const t=document.createElement("button"),n=document.createElement("button"),o=document.createElement("button");t.textContent="low",n.textContent="medium",o.textContent="high";const r=e=>{let r="";return t.classList.remove("active-button"),n.classList.remove("active-button"),o.classList.remove("active-button"),"low"==e.target.innerText?t.classList.add("active-button"):"medium"==e.target.innerText?n.classList.add("active-button"):o.classList.add("active-button"),r=e.target.innerText,r};return t.addEventListener("click",(e=>r(e))),n.addEventListener("click",(e=>r(e))),o.addEventListener("click",(e=>r(e))),e.append(t,n,o),e},l=()=>{const e=document.querySelector("#main-content"),n=document.querySelector('[data-text="Task Name"]'),o=document.querySelector('[data-text="Task Description"]'),r=document.querySelector('input[type="date"]'),a=document.querySelector('button[class="active-button"]');let c="",i="";if(!n.innerHTML)return alert("please fill Task Name field");if(c=r.value?r.value:"no due date",i=a?a.innerHTML:"no priority set",null!==localStorage.getItem(`${n.innerHTML}`))return alert(`Task ${n.innerHTML} already exist!`);const s=(new Date).toISOString(),d=((e,t,n,o,r)=>({title:e,description:t,dueDate:n,priority:o,dateAdded:r}))(`${n.textContent}`,`${o.textContent}`,`${c}`,`${i}`,s);localStorage.setItem(`${n.textContent}`,JSON.stringify(d)),e.replaceChildren(),t()},m=()=>{const e=document.createElement("button");return e.textContent="add",e.addEventListener("click",l),e},p=()=>{const e=document.createElement("button");return e.textContent="cancel",e.addEventListener("click",(()=>{const e=v();document.querySelector("#task-form").replaceWith(e)})),e};const A=(e,t)=>{e.target.parentElement;const n=document.createElement("div");n.id="add-project-input";const o=document.createElement("input");o.id="input-project-name";const r=document.createElement("button");r.addEventListener("click",(()=>((e,t,n)=>{const o=localStorage.getItem("Projects");if(o){const t=JSON.parse(o),n={title:e.value,tasks:[]};localStorage.setItem("Projects",JSON.stringify([...t,n]))}else console.log("alaws"),localStorage.setItem("Projects",JSON.stringify([{title:e.value,tasks:[]}]));t.replaceWith(n)})(o,n,t))),r.textContent="add";const a=document.createElement("button");a.textContent="cancel",a.addEventListener("click",(()=>((e,t)=>{e.replaceWith(t)})(n,t))),n.textContent="Project Name:",n.append(o,r,a),e.target.replaceWith(n)};function v(){const e=document.createElement("div");return e.textContent="Add a Task",e.classList.add("add-task"),e.addEventListener("click",c),e}var f=n(379),g=n.n(f),b=n(795),C=n.n(b),y=n(569),E=n.n(y),h=n(565),x=n.n(h),S=n(216),I=n.n(S),k=n(589),T=n.n(k),B=n(158),L={};L.styleTagTransform=T(),L.setAttributes=x(),L.insert=E().bind(null,"head"),L.domAPI=C(),L.insertStyleElement=I(),g()(B.Z,L),B.Z&&B.Z.locals&&B.Z.locals;var w=n(663),j={};j.styleTagTransform=T(),j.setAttributes=x(),j.insert=E().bind(null,"head"),j.domAPI=C(),j.insertStyleElement=I(),g()(w.Z,j),w.Z&&w.Z.locals&&w.Z.locals;var N=n(209),M={};M.styleTagTransform=T(),M.setAttributes=x(),M.insert=E().bind(null,"head"),M.domAPI=C(),M.insertStyleElement=I(),g()(N.Z,M),N.Z&&N.Z.locals&&N.Z.locals,function(){document.body.replaceChildren();const e=document.querySelector("body"),n=document.createElement("main");n.append(function(){const e=document.createElement("div");e.id="sidebar";const t=document.createElement("div");t.textContent="Home";const n=document.createElement("div");n.textContent="Today";const o=document.createElement("div");o.textContent="Week";const r=document.createElement("div");return r.textContent="Projects",r.append(function(){const e=document.createElement("div");return e.textContent="Add Project",e.id="add-project",e.addEventListener("click",(t=>A(t,e))),e}()),e.append(t,n,o,r),e}(),function(){const e=document.createElement("div");return e.id="main-content",e.replaceChildren(),e}()),e.append(function(){const e=document.createElement("header"),t=document.createElement("div");return t.textContent=" To-do List",e.append(t),e}(),n,function(){const e=document.createElement("footer");return e.textContent="copyright 2023",e}()),t()}(),t()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,