(()=>{"use strict";var t={663:(t,e,n)=>{n.d(e,{Z:()=>i});var o=n(537),r=n.n(o),c=n(645),a=n.n(c)()(r());a.push([t.id,'[contentEditable="true"]:empty:not(:focus):before {\n  content: attr(data-text);\n}\n\n.active-button{\n    background-color: red;\n}\n',"",{version:3,sources:["webpack://./src/assets/css/handleAddTask.css"],names:[],mappings:"AAAA;EACE,wBAAwB;AAC1B;;AAEA;IACI,qBAAqB;AACzB",sourcesContent:['[contentEditable="true"]:empty:not(:focus):before {\n  content: attr(data-text);\n}\n\n.active-button{\n    background-color: red;\n}\n'],sourceRoot:""}]);const i=a},158:(t,e,n)=>{n.d(e,{Z:()=>i});var o=n(537),r=n.n(o),c=n(645),a=n.n(c)()(r());a.push([t.id,"*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody{\n    background-color: green;\n    min-height: 100vh;\n    display: grid;\n    grid-template-columns: 2fr 10fr;\n    grid-template-rows: 1fr 10fr 1fr;\n}\n\nheader{\n    grid-column: span 2;\n}\n\nmain{\n    display: grid;\n    grid-template-columns: 300px  1fr;\n    grid-column: span 2;\n}\n\n#sidebar{\n display: grid;\n grid-auto-rows: 50px;\n\n /* gap: 10px; */\n}\n\nfooter{\n    margin-top: auto;\n}","",{version:3,sources:["webpack://./src/assets/css/layout.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,uBAAuB;IACvB,iBAAiB;IACjB,aAAa;IACb,+BAA+B;IAC/B,gCAAgC;AACpC;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,iCAAiC;IACjC,mBAAmB;AACvB;;AAEA;CACC,aAAa;CACb,oBAAoB;;CAEpB,eAAe;AAChB;;AAEA;IACI,gBAAgB;AACpB",sourcesContent:["*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody{\n    background-color: green;\n    min-height: 100vh;\n    display: grid;\n    grid-template-columns: 2fr 10fr;\n    grid-template-rows: 1fr 10fr 1fr;\n}\n\nheader{\n    grid-column: span 2;\n}\n\nmain{\n    display: grid;\n    grid-template-columns: 300px  1fr;\n    grid-column: span 2;\n}\n\n#sidebar{\n display: grid;\n grid-auto-rows: 50px;\n\n /* gap: 10px; */\n}\n\nfooter{\n    margin-top: auto;\n}"],sourceRoot:""}]);const i=a},209:(t,e,n)=>{n.d(e,{Z:()=>i});var o=n(537),r=n.n(o),c=n(645),a=n.n(c)()(r());a.push([t.id,"#pop-up {\n    position: absolute;\n    bottom: 5em;\n    left: 2em;\n}","",{version:3,sources:["webpack://./src/assets/css/taskCompletePopup.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,WAAW;IACX,SAAS;AACb",sourcesContent:["#pop-up {\n    position: absolute;\n    bottom: 5em;\n    left: 2em;\n}"],sourceRoot:""}]);const i=a},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",o=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),o&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),o&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,o,r,c){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(o)for(var i=0;i<this.length;i++){var d=this[i][0];null!=d&&(a[d]=!0)}for(var s=0;s<t.length;s++){var l=[].concat(t[s]);o&&a[l[0]]||(void 0!==c&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=c),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),c="/*# ".concat(r," */");return[e].concat([c]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,o=0;o<e.length;o++)if(e[o].identifier===t){n=o;break}return n}function o(t,o){for(var c={},a=[],i=0;i<t.length;i++){var d=t[i],s=o.base?d[0]+o.base:d[0],l=c[s]||0,u="".concat(s," ").concat(l);c[s]=l+1;var m=n(u),p={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==m)e[m].references++,e[m].updater(p);else{var v=r(p,o);o.byIndex=i,e.splice(i,0,{identifier:u,updater:v,references:1})}a.push(u)}return a}function r(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,r){var c=o(t=t||[],r=r||{});return function(t){t=t||[];for(var a=0;a<c.length;a++){var i=n(c[a]);e[i].references--}for(var d=o(t,r),s=0;s<c.length;s++){var l=n(c[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}c=d}}},569:t=>{var e={};t.exports=function(t,n){var o=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var c=n.sourceMap;c&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(c))))," */")),e.styleTagTransform(o,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(o){var r=e[o];if(void 0!==r)return r.exports;var c=e[o]={id:o,exports:{}};return t[o](c,c.exports,n),c.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0,(()=>{const t=t=>{document.querySelector("main-content");const n=document.createElement("div");n.id="pop-up",n.textContent="1 task completed!   ";const o=document.createElement("span");o.textContent="undo",o.addEventListener("click",(()=>((t,n)=>{console.log(JSON.parse(t));const o=JSON.parse(t);localStorage.setItem(o.title,t),e(),n.remove()})(t,n))),n.append(o),setTimeout((()=>{n.remove()}),2e3),document.body.append(n)};function e(){const t=document.querySelector("#main-content");let e=[];return t.replaceChildren(),o(e),r(e,t),t.append(P()),t}const o=t=>{for(let e=0;e<=localStorage.length-1;e++){const n=JSON.parse(localStorage.getItem(localStorage.key(e)));if(!n.title)return;t.push(n)}return t.sort((function(t,e){return t.dateAdded<e.dateAdded?-1:t.dateAdded>e.dateAdded?1:0})),t},r=(t,e)=>{for(let n=0;n<t.length;n++){const o=c(t[n]);e.append(o)}return e},c=n=>{const o=document.createElement("div");o.id=n.title;const r=document.createElement("div"),c=document.createElement("div"),a=document.createElement("div"),i=document.createElement("div"),d=document.createElement("input");return d.type="checkbox",d.addEventListener("click",(n=>(n=>{const o=document.querySelector("#main-content"),r=localStorage.getItem(n.target.parentElement.id);localStorage.removeItem(n.target.parentElement.id),t(r),o.replaceChildren(),e()})(n))),r.innerHTML=`Task:${n.title}`,c.innerHTML=`details:${n.description}`,a.textContent=`Due date:${n.dueDate}`,i.textContent=`Priority:${n.priority}`,o.append(d,r,c,a,i),o},a=(t,e,n,o,r)=>({title:t,description:e,dueDate:n,priority:o,dateAdded:r});function i(){const t=document.querySelector(".add-task"),e=document.createElement("div");return e.id="task-form",e.append(d(),s(),l(),u(),p(),v()),t.replaceWith(e),t}const d=()=>{const t=document.createElement("div");return t.setAttribute("contentEditable","true"),t.setAttribute("data-text","Task Name"),t},s=()=>{const t=document.createElement("div");return t.setAttribute("contentEditable","true"),t.setAttribute("data-text","Task Description"),t},l=()=>{let t="";const e=document.createElement("div");e.textContent="Due Date:";const n=document.createElement("input");return n.setAttribute("type","date"),n.addEventListener("change",(e=>(e=>{t=e.target.value})(e))),e.append(n),e},u=()=>{const t=document.createElement("div");t.textContent="Priority:";const e=document.createElement("button"),n=document.createElement("button"),o=document.createElement("button");e.textContent="low",n.textContent="medium",o.textContent="high";const r=t=>{let r="";return e.classList.remove("active-button"),n.classList.remove("active-button"),o.classList.remove("active-button"),"low"==t.target.innerText?e.classList.add("active-button"):"medium"==t.target.innerText?n.classList.add("active-button"):o.classList.add("active-button"),r=t.target.innerText,r};return e.addEventListener("click",(t=>r(t))),n.addEventListener("click",(t=>r(t))),o.addEventListener("click",(t=>r(t))),t.append(e,n,o),t},m=()=>{const t=document.querySelector("#main-content"),n=document.querySelector('[data-text="Task Name"]'),o=document.querySelector('[data-text="Task Description"]'),r=document.querySelector('input[type="date"]'),c=document.querySelector('button[class="active-button"]');let i="",d="";if(!n.innerHTML)return alert("please fill Task Name field");if(i=r.value?r.value:"no due date",d=c?c.innerHTML:"no priority set",null!==localStorage.getItem(`${n.innerHTML}`))return alert(`Task ${n.innerHTML} already exist!`);const s=(new Date).toISOString(),l=a(`${n.textContent}`,`${o.textContent}`,`${i}`,`${d}`,s);localStorage.setItem(`${n.textContent}`,JSON.stringify(l)),t.replaceChildren(),e()},p=()=>{const t=document.createElement("button");return t.textContent="add",t.addEventListener("click",m),t},v=()=>{const t=document.createElement("button");return t.textContent="cancel",t.addEventListener("click",(()=>{const t=P();document.querySelector("#task-form").replaceWith(t)})),t},f=(t,e)=>{document.querySelector("main-content");const n=document.createElement("div");n.id="pop-up",n.textContent="1 task completed!   ";const o=document.createElement("span");o.textContent="undo",o.addEventListener("click",(()=>((t,e,n)=>{const o=document.querySelector("#project-title").textContent,r=JSON.parse(localStorage.getItem("Projects")),c=r.findIndex((t=>t.title==o));r[c].tasks.splice(n,0,t),localStorage.setItem("Projects",JSON.stringify(r)),e.remove(),L(o)})(t,n,e))),n.append(o),setTimeout((()=>{n.remove()}),2e3),document.body.append(n)},g=()=>{const t=document.createElement("input");return t.type="checkbox",t.addEventListener("click",(t=>(t=>{const e=document.querySelector("#project-title").textContent,n=t.target.parentElement.id,o=JSON.parse(localStorage.getItem("Projects")),r=o.findIndex((t=>t.title==e)),c=o[r],a=c.tasks.findIndex((t=>t.title==n)),i=c.tasks[a];c.tasks.splice(a,1),localStorage.setItem("Projects",JSON.stringify(o)),L(e),f(i,a)})(t))),t},A=t=>{const e=document.createElement("div"),n=document.createElement("input");return n.type="date",n.value=t.dueDate,e.textContent="Due date:",e.append(n),e},y=t=>{const e=document.createElement("div");e.textContent="Priority:";const n=document.createElement("button"),o=document.createElement("button"),r=document.createElement("button");n.textContent="low",o.textContent="medium",r.textContent="high";const c=e=>{let c="";return n.classList.remove("active-button"),o.classList.remove("active-button"),r.classList.remove("active-button"),"low"==e.target.innerText||"low"==t.priority?n.classList.add("active-button"):"medium"==e.target.innerText||"medium"==t.priority?o.classList.add("active-button"):"high"!=e.target.innerText&&"high"!=t.priority||r.classList.add("active-button"),c=e.target.innerText,c};return"low"==t.priority?n.classList.add("active-button"):"medium"==t.priority?o.classList.add("active-button"):"high"==t.priority&&r.classList.add("active-button"),n.addEventListener("click",(t=>c(t))),o.addEventListener("click",(t=>c(t))),r.addEventListener("click",(t=>c(t))),e.append(n,o,r),e},C=()=>{const t=document.querySelector("#project-title").textContent,e=document.createElement("button");return e.type="button",e.addEventListener("click",(()=>L(t))),e.textContent="Cancel",e},b=t=>{const e=document.createElement("button");e.type="button",e.textContent="submit";const n=x(t.title);return e.addEventListener("click",(()=>((t,e)=>{const n=document.querySelector("#project-title").textContent,o=document.querySelector('[data-text="Task Name"]').textContent,r=document.querySelector('[data-text="Task Description"]').textContent,c=document.querySelector('input[type="date"]').value,a=document.querySelector(".active-button");if(t.title=o,t.description=r,!o)return L(n),alert("Input a task name");t.dueDate?t.dueDate=c:t.dueDate="no due date",t.priority=a?a.textContent:"no priority set",((t,e)=>{const n=JSON.parse(localStorage.getItem("Projects")),o=document.querySelector("#project-title").textContent;n.find((t=>t.title==o)).tasks[e]=t,localStorage.setItem("Projects",JSON.stringify(n))})(t,e),L(n)})(t,n))),e},x=t=>{const e=JSON.parse(localStorage.getItem("Projects")),n=document.querySelector("#project-title").textContent;return e.find((t=>t.title==n)).tasks.findIndex((e=>e.title==t))},E=t=>{const e=t.target.parentElement.id.toString(),n=document.querySelector(`[id='${e}']`);if(""==e)return;const o=(t=>{const e=JSON.parse(localStorage.getItem("Projects")),n=document.querySelector("#project-title").textContent;return e.find((t=>t.title==n)).tasks.find((e=>e.title===t))})(e);n.replaceWith((t=>{const e=document.createElement("div"),n=d(),o=s(),r=A(t),c=y(t),a=C(),i=b(t);return n.textContent=t.title,o.textContent=t.description,e.append(n,o,r,c,a,i),e})(o))},S=t=>{const e=document.querySelector("#main-content"),n=document.createElement("div");return n.id="project-title",n.textContent=t,e.replaceChildren(),e.append(n),e},h=()=>{const t=document.querySelector("#sidebar-projects"),e=JSON.parse(localStorage.getItem("Projects"));if(e){t.replaceChildren(),t.textContent="Projects";for(let n=0;n<e.length;n++){const o=document.createElement("div");o.textContent=e[n].title,t.append(o),o.addEventListener("click",(t=>{return e=t.target.textContent,S(e),void L(e);var e}))}t.append(B())}},k=()=>{const t=document.querySelector("#project-title"),e=document.querySelector('[data-text="Task Name"]'),n=document.querySelector('[data-text="Task Description"]'),o=document.querySelector('input[type="date"]'),r=document.querySelector('button[class="active-button"]');let c="",i="";c=o.value?o.value:"no due date",i=r?r.innerHTML:"no priority set";const d=(new Date).toISOString(),s=a(`${e.textContent}`,`${n.textContent}`,`${c}`,`${i}`,d);I(s),L(t.textContent)},I=t=>{const e=JSON.parse(localStorage.getItem("Projects")),n=document.querySelector("#project-title").textContent,o=e.findIndex((t=>t.title==n)),r=e[o].tasks;r.push(t),e[o].tasks=r,localStorage.setItem("Projects",JSON.stringify(e))},L=t=>{const e=document.querySelector("#main-content");e.replaceChildren(),S(t);const n=document.createElement("div"),o=JSON.parse(localStorage.getItem("Projects"));if(!o)return console.log(o,j()),e.append(j());const r=o.map((t=>t.title)).indexOf(t),c=o[r];for(let t=0;t<c.tasks.length;t++)n.append(T(c.tasks[t]));e.append(n,j())},T=t=>{const e=document.createElement("div");e.id=t.title;const n=document.createElement("div"),o=document.createElement("div"),r=document.createElement("div"),c=document.createElement("div"),a=g();return n.innerHTML=`Task:${t.title}`,o.innerHTML=`details:${t.description}`,r.textContent=`Due date:${t.dueDate}`,c.textContent=`Priority:${t.priority}`,e.addEventListener("click",(t=>E(t))),e.append(a,n,o,r,c),e},j=()=>{const t=document.createElement("div");t.textContent="Add a task",t.id="add-task";const e=document.createElement("div");return e.id="task-form",t.addEventListener("click",(()=>t.replaceWith(e))),e.append(d(),s(),l(),u(),(()=>{const t=document.createElement("button");return t.type="button",t.textContent="Add",t.addEventListener("click",k),t})(),((t,e)=>{const n=document.createElement("button");n.type="button",n.textContent="cancel",n.addEventListener("click",(()=>o(t,e)));const o=(t,e)=>{e.replaceWith(t)};return n})(t,e)),t},q=(t,e)=>{const n=document.createElement("div");n.id="add-project-input";const o=document.createElement("input");o.id="input-project-name";const r=document.createElement("button");r.addEventListener("click",(()=>((t,e,n)=>{const o=localStorage.getItem("Projects"),r=t.value;if(!r)return alert("Project name can't be empty");if(o){const t=JSON.parse(o);if(1==t.some((t=>t.title==r)))return alert("Project name already exist!");const e={title:r,tasks:[]};localStorage.setItem("Projects",JSON.stringify([...t,e]))}else localStorage.setItem("Projects",JSON.stringify([{title:r,tasks:[]}]));h(),S(r),L(r),e.replaceWith(n)})(o,n,e))),r.textContent="add";const c=document.createElement("button");c.textContent="cancel",c.addEventListener("click",(()=>((t,e)=>{t.replaceWith(e)})(n,e))),n.textContent="Project Name:",n.append(o,r,c),t.target.replaceWith(n)};function B(){const t=document.createElement("div");return t.textContent="Add Project",t.id="add-project",t.addEventListener("click",(e=>q(e,t))),t}function P(){const t=document.createElement("div");return t.textContent="Add a Task",t.classList.add("add-task"),t.addEventListener("click",i),t}var N=n(379),O=n.n(N),w=n(795),J=n.n(w),$=n(569),D=n.n($),M=n(565),Z=n.n(M),H=n(216),W=n.n(H),R=n(589),U=n.n(R),z=n(158),F={};F.styleTagTransform=U(),F.setAttributes=Z(),F.insert=D().bind(null,"head"),F.domAPI=J(),F.insertStyleElement=W(),O()(z.Z,F),z.Z&&z.Z.locals&&z.Z.locals;var _=n(663),V={};V.styleTagTransform=U(),V.setAttributes=Z(),V.insert=D().bind(null,"head"),V.domAPI=J(),V.insertStyleElement=W(),O()(_.Z,V),_.Z&&_.Z.locals&&_.Z.locals;var X=n(209),G={};G.styleTagTransform=U(),G.setAttributes=Z(),G.insert=D().bind(null,"head"),G.domAPI=J(),G.insertStyleElement=W(),O()(X.Z,G),X.Z&&X.Z.locals&&X.Z.locals,function(){document.body.replaceChildren();const t=document.querySelector("body"),n=document.createElement("main");n.append(function(){const t=document.createElement("div");t.id="sidebar";const e=document.createElement("div");e.textContent="Home";const n=document.createElement("div");n.textContent="Today";const o=document.createElement("div");o.textContent="Week";const r=document.createElement("div");return r.textContent="Projects",r.id="sidebar-projects",r.append(B()),t.append(e,n,o,r),t}(),function(){const t=document.createElement("div");return t.id="main-content",t.replaceChildren(),t}()),t.append(function(){const t=document.createElement("header"),e=document.createElement("div");return e.textContent=" To-do List",t.append(e),t}(),n,function(){const t=document.createElement("footer");return t.textContent="copyright 2023",t}()),e()}(),e(),h()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFnQlYsRUFYOUIsV0FDRSxNQUFNVyxFQUFTcE0sU0FBU1csY0FBYyxVQUV0QyxPQURBeUwsRUFBT2pKLFlBQWMsaUJBQ2RpSixDQUNULENBT29DQyxJQUNsQ3hJLEdBR0YsQ0loSUF5SSxHQUNBekksSUFDQWtHLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vZGluLXRvZG8vLi9zcmMvYXNzZXRzL2Nzcy9oYW5kbGVBZGRUYXNrLmNzcyIsIndlYnBhY2s6Ly9vZGluLXRvZG8vLi9zcmMvYXNzZXRzL2Nzcy9sYXlvdXQuY3NzIiwid2VicGFjazovL29kaW4tdG9kby8uL3NyYy9hc3NldHMvY3NzL3Rhc2tDb21wbGV0ZVBvcHVwLmNzcyIsIndlYnBhY2s6Ly9vZGluLXRvZG8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL29kaW4tdG9kby8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL29kaW4tdG9kby8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9vZGluLXRvZG8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL29kaW4tdG9kby8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly9vZGluLXRvZG8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vb2Rpbi10b2RvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vb2Rpbi10b2RvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vb2Rpbi10b2RvL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL29kaW4tdG9kby93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9vZGluLXRvZG8vd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL29kaW4tdG9kby93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL29kaW4tdG9kby93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vb2Rpbi10b2RvLy4vc3JjL21vZHVsZXMvdGFza0NvbXBsZXRQb3B1cC5qcyIsIndlYnBhY2s6Ly9vZGluLXRvZG8vLi9zcmMvbW9kdWxlcy9kaXNwbGF5VGFza3MuanMiLCJ3ZWJwYWNrOi8vb2Rpbi10b2RvLy4vc3JjL21vZHVsZXMvdGFza0ZhY3RvcnkuanMiLCJ3ZWJwYWNrOi8vb2Rpbi10b2RvLy4vc3JjL21vZHVsZXMvdGFza0Zvcm0uanMiLCJ3ZWJwYWNrOi8vb2Rpbi10b2RvLy4vc3JjL21vZHVsZXMvcG9wVXBGb3JQcm9qZWNUYXNrc0RvbmUuanMiLCJ3ZWJwYWNrOi8vb2Rpbi10b2RvLy4vc3JjL21vZHVsZXMvY2hlY2tCb3hGb3JQcm9qZWN0VGFza3MuanMiLCJ3ZWJwYWNrOi8vb2Rpbi10b2RvLy4vc3JjL21vZHVsZXMvZWRpdFRhc2tJblByb2plY3QuanMiLCJ3ZWJwYWNrOi8vb2Rpbi10b2RvLy4vc3JjL21vZHVsZXMvZGlzcGxheVByb2plY3QuanMiLCJ3ZWJwYWNrOi8vb2Rpbi10b2RvLy4vc3JjL21vZHVsZXMvbGF5b3V0LmpzIiwid2VicGFjazovL29kaW4tdG9kby8uL3NyYy9hc3NldHMvY3NzL2xheW91dC5jc3M/M2VjMiIsIndlYnBhY2s6Ly9vZGluLXRvZG8vLi9zcmMvYXNzZXRzL2Nzcy9oYW5kbGVBZGRUYXNrLmNzcz83N2NmIiwid2VicGFjazovL29kaW4tdG9kby8uL3NyYy9hc3NldHMvY3NzL3Rhc2tDb21wbGV0ZVBvcHVwLmNzcz82YzAzIiwid2VicGFjazovL29kaW4tdG9kby8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgW2NvbnRlbnRFZGl0YWJsZT1cInRydWVcIl06ZW1wdHk6bm90KDpmb2N1cyk6YmVmb3JlIHtcbiAgY29udGVudDogYXR0cihkYXRhLXRleHQpO1xufVxuXG4uYWN0aXZlLWJ1dHRvbntcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG59XG5gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9hc3NldHMvY3NzL2hhbmRsZUFkZFRhc2suY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0Usd0JBQXdCO0FBQzFCOztBQUVBO0lBQ0kscUJBQXFCO0FBQ3pCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIltjb250ZW50RWRpdGFibGU9XFxcInRydWVcXFwiXTplbXB0eTpub3QoOmZvY3VzKTpiZWZvcmUge1xcbiAgY29udGVudDogYXR0cihkYXRhLXRleHQpO1xcbn1cXG5cXG4uYWN0aXZlLWJ1dHRvbntcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYCp7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuYm9keXtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjtcbiAgICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMmZyIDEwZnI7XG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxZnIgMTBmciAxZnI7XG59XG5cbmhlYWRlcntcbiAgICBncmlkLWNvbHVtbjogc3BhbiAyO1xufVxuXG5tYWlue1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAzMDBweCAgMWZyO1xuICAgIGdyaWQtY29sdW1uOiBzcGFuIDI7XG59XG5cbiNzaWRlYmFye1xuIGRpc3BsYXk6IGdyaWQ7XG4gZ3JpZC1hdXRvLXJvd3M6IDUwcHg7XG5cbiAvKiBnYXA6IDEwcHg7ICovXG59XG5cbmZvb3RlcntcbiAgICBtYXJnaW4tdG9wOiBhdXRvO1xufWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2Fzc2V0cy9jc3MvbGF5b3V0LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLFNBQVM7SUFDVCxVQUFVO0lBQ1Ysc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksdUJBQXVCO0lBQ3ZCLGlCQUFpQjtJQUNqQixhQUFhO0lBQ2IsK0JBQStCO0lBQy9CLGdDQUFnQztBQUNwQzs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYixpQ0FBaUM7SUFDakMsbUJBQW1CO0FBQ3ZCOztBQUVBO0NBQ0MsYUFBYTtDQUNiLG9CQUFvQjs7Q0FFcEIsZUFBZTtBQUNoQjs7QUFFQTtJQUNJLGdCQUFnQjtBQUNwQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIqe1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblxcbmJvZHl7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IGdyZWVuO1xcbiAgICBtaW4taGVpZ2h0OiAxMDB2aDtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAyZnIgMTBmcjtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxZnIgMTBmciAxZnI7XFxufVxcblxcbmhlYWRlcntcXG4gICAgZ3JpZC1jb2x1bW46IHNwYW4gMjtcXG59XFxuXFxubWFpbntcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAzMDBweCAgMWZyO1xcbiAgICBncmlkLWNvbHVtbjogc3BhbiAyO1xcbn1cXG5cXG4jc2lkZWJhcntcXG4gZGlzcGxheTogZ3JpZDtcXG4gZ3JpZC1hdXRvLXJvd3M6IDUwcHg7XFxuXFxuIC8qIGdhcDogMTBweDsgKi9cXG59XFxuXFxuZm9vdGVye1xcbiAgICBtYXJnaW4tdG9wOiBhdXRvO1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYCNwb3AtdXAge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDVlbTtcbiAgICBsZWZ0OiAyZW07XG59YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvYXNzZXRzL2Nzcy90YXNrQ29tcGxldGVQb3B1cC5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsV0FBVztJQUNYLFNBQVM7QUFDYlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIjcG9wLXVwIHtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICBib3R0b206IDVlbTtcXG4gICAgbGVmdDogMmVtO1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiaW1wb3J0IGRpc3BsYXlUYXNrcyBmcm9tIFwiLi9kaXNwbGF5VGFza3NcIjtcblxuY29uc3QgY3JlYXRlUG9wVXBEaXYgPSAodGFza0NvbXBsZXRlZCkgPT4ge1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwibWFpbi1jb250ZW50XCIpO1xuICBjb25zdCBwb3BVcERpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIHBvcFVwRGl2LmlkID0gXCJwb3AtdXBcIjtcbiAgcG9wVXBEaXYudGV4dENvbnRlbnQgPSBgMSB0YXNrIGNvbXBsZXRlZCEgICBgO1xuXG4gIGNvbnN0IHNwYW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcbiAgc3Bhbi50ZXh0Q29udGVudCA9IFwidW5kb1wiO1xuICBzcGFuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiBoYW5kbGVVbmRvKHRhc2tDb21wbGV0ZWQsIHBvcFVwRGl2KSk7XG4gIHBvcFVwRGl2LmFwcGVuZChzcGFuKTtcblxuICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICBwb3BVcERpdi5yZW1vdmUoKTtcbiAgfSwgMjAwMCk7XG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kKHBvcFVwRGl2KTtcbn07XG5cbmNvbnN0IGhhbmRsZVVuZG8gPSAodGFza0NvbXBsZXRlZCwgcG9wVXBEaXYpID0+IHtcbiAgY29uc29sZS5sb2coSlNPTi5wYXJzZSh0YXNrQ29tcGxldGVkKSk7XG4gIGNvbnN0IHRhc2tUb1Jlc3RvcmUgPSBKU09OLnBhcnNlKHRhc2tDb21wbGV0ZWQpO1xuICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSh0YXNrVG9SZXN0b3JlLnRpdGxlLCB0YXNrQ29tcGxldGVkKTtcbiAgZGlzcGxheVRhc2tzKCk7XG4gIHBvcFVwRGl2LnJlbW92ZSgpO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlUG9wVXBEaXY7XG4iLCJpbXBvcnQgeyBjcmVhdGVBZGR0YXNrRGl2IH0gZnJvbSBcIi4vbGF5b3V0XCI7XG5pbXBvcnQgY3JlYXRlUG9wVXBEaXYgZnJvbSBcIi4vdGFza0NvbXBsZXRQb3B1cFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkaXNwbGF5VGFza3MoKSB7XG4gIGNvbnN0IG1haW5Db250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNtYWluLWNvbnRlbnRcIik7XG4gIGxldCB0YXNrcyA9IFtdO1xuICBtYWluQ29udGVudC5yZXBsYWNlQ2hpbGRyZW4oKVxuXG4gIFxuICBjcmVhdGVBbmRTb3J0VGFza0FycmF5KHRhc2tzKTtcbiAgY3JlYXRlRGl2c1BlclRhc2sodGFza3MsIG1haW5Db250ZW50KTtcbiAgbWFpbkNvbnRlbnQuYXBwZW5kKGNyZWF0ZUFkZHRhc2tEaXYoKSk7XG5cbiAgcmV0dXJuIG1haW5Db250ZW50O1xufVxuXG5jb25zdCBjcmVhdGVBbmRTb3J0VGFza0FycmF5ID0gKHRhc2tzKSA9PiB7XG4gIGZvciAobGV0IGkgPSAwOyBpIDw9IGxvY2FsU3RvcmFnZS5sZW5ndGggLSAxOyBpKyspIHtcbiAgICBjb25zdCB0YXNrID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShsb2NhbFN0b3JhZ2Uua2V5KGkpKSk7XG4gICAgaWYgKCF0YXNrLnRpdGxlKXtcbiAgICAgIHJldHVyblxuICAgIH1lbHNle1xuXG4gICAgdGFza3MucHVzaCh0YXNrKTtcbiAgICB9XG4gIH1cblxuICB0YXNrcy5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgcmV0dXJuIGEuZGF0ZUFkZGVkIDwgYi5kYXRlQWRkZWQgPyAtMSA6IGEuZGF0ZUFkZGVkID4gYi5kYXRlQWRkZWQgPyAxIDogMDtcbiAgfSk7XG4gIHJldHVybiB0YXNrcztcbn07XG5cblxuY29uc3QgY3JlYXRlRGl2c1BlclRhc2sgPSAodGFza3MsIG1haW5Db250ZW50KSA9PiB7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdGFza3MubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCB0YXNrRGl2ID0gY3JlYXRlVGFza0Rpdih0YXNrc1tpXSk7XG4gICAgbWFpbkNvbnRlbnQuYXBwZW5kKHRhc2tEaXYpO1xuICB9XG4gIHJldHVybiBtYWluQ29udGVudDtcbn07XG5cblxuY29uc3QgaGFuZGxlQ2hlY2tib3hDbGljayA9IChlKSA9PiB7XG4gIGNvbnN0IG1haW5Db250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNtYWluLWNvbnRlbnRcIik7XG4gIGNvbnN0IHRhc2tDb21wbGV0ZWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShlLnRhcmdldC5wYXJlbnRFbGVtZW50LmlkKVxuICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShlLnRhcmdldC5wYXJlbnRFbGVtZW50LmlkKTtcblxuICBjcmVhdGVQb3BVcERpdih0YXNrQ29tcGxldGVkKVxuICBtYWluQ29udGVudC5yZXBsYWNlQ2hpbGRyZW4oKTtcbiAgZGlzcGxheVRhc2tzKCk7XG59O1xuXG5jb25zdCBjcmVhdGVUYXNrRGl2ID0gKHRhc2spID0+IHtcbiAgY29uc3QgdGFza0RpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIHRhc2tEaXYuaWQgPSB0YXNrLnRpdGxlO1xuICBjb25zdCB0YXNrTmFtZURpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG5cbiAgY29uc3QgdGFza0RldGFpbHNEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBjb25zdCBkdWVEYXRlRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgY29uc3QgcHJpb3JpdHlEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuXG4gIGNvbnN0IGNoZWNrQm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xuICBjaGVja0JveC50eXBlID0gXCJjaGVja2JveFwiO1xuXG4gIGNoZWNrQm94LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4gaGFuZGxlQ2hlY2tib3hDbGljayhlKSk7XG5cbiAgdGFza05hbWVEaXYuaW5uZXJIVE1MID0gYFRhc2s6JHt0YXNrLnRpdGxlfWA7XG4gIHRhc2tEZXRhaWxzRGl2LmlubmVySFRNTCA9IGBkZXRhaWxzOiR7dGFzay5kZXNjcmlwdGlvbn1gO1xuICBkdWVEYXRlRGl2LnRleHRDb250ZW50ID0gYER1ZSBkYXRlOiR7dGFzay5kdWVEYXRlfWA7XG4gIHByaW9yaXR5RGl2LnRleHRDb250ZW50ID0gYFByaW9yaXR5OiR7dGFzay5wcmlvcml0eX1gO1xuXG4gIHRhc2tEaXYuYXBwZW5kKFxuICAgIGNoZWNrQm94LFxuICAgIHRhc2tOYW1lRGl2LFxuICAgIHRhc2tEZXRhaWxzRGl2LFxuICAgIGR1ZURhdGVEaXYsXG4gICAgcHJpb3JpdHlEaXZcbiAgKTtcbiAgcmV0dXJuIHRhc2tEaXY7XG59O1xuIiwiY29uc3QgdGFza0ZhY3RvcnkgPSAodGl0bGUsIGRlc2NyaXB0aW9uLCBkdWVEYXRlLCBwcmlvcml0eSxkYXRlQWRkZWQgKSA9PiB7XG4gICAgcmV0dXJuIHt0aXRsZSwgZGVzY3JpcHRpb24sIGR1ZURhdGUsIHByaW9yaXR5LCBkYXRlQWRkZWR9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHRhc2tGYWN0b3J5IiwiaW1wb3J0IHsgY3JlYXRlQWRkdGFza0RpdiB9IGZyb20gXCIuL2xheW91dFwiO1xuaW1wb3J0IHRhc2tGYWN0b3J5IGZyb20gXCIuL3Rhc2tGYWN0b3J5XCI7XG5pbXBvcnQgZGlzcGxheVRhc2tzIGZyb20gXCIuL2Rpc3BsYXlUYXNrc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVUYXNrRm9ybSgpIHtcbiAgY29uc3QgYWRkVGFza0RpdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYWRkLXRhc2tcIik7XG4gIGNvbnN0IHRhc2tGb3JtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgdGFza0Zvcm0uaWQgPSBcInRhc2stZm9ybVwiO1xuXG4gIHRhc2tGb3JtLmFwcGVuZChcbiAgICBjcmVhdGVUYXNrbmFtZUZpZWxkKCksXG4gICAgY3JlYXRlRGVzY3JpcHRpb25GaWVsZCgpLFxuICAgIGNyZWF0ZURlYWRsaW5lRmllbGQoKSxcbiAgICBjcmVhdGVQcmlvcml0eUZpZWxkKCksXG4gICAgY3JlYXRlU3VibWl0QnV0dG9uKCksXG4gICAgY3JlYXRlQ2FuY2VsQnV0dG9uKClcbiAgKTtcbiAgYWRkVGFza0Rpdi5yZXBsYWNlV2l0aCh0YXNrRm9ybSk7XG5cbiAgcmV0dXJuIGFkZFRhc2tEaXY7XG59XG5cbmV4cG9ydCBjb25zdCBjcmVhdGVUYXNrbmFtZUZpZWxkID0gKCkgPT4ge1xuICBjb25zdCB0YXNrTmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIHRhc2tOYW1lLnNldEF0dHJpYnV0ZShcImNvbnRlbnRFZGl0YWJsZVwiLCBcInRydWVcIik7XG4gIHRhc2tOYW1lLnNldEF0dHJpYnV0ZShcImRhdGEtdGV4dFwiLCBcIlRhc2sgTmFtZVwiKTtcbiAgcmV0dXJuIHRhc2tOYW1lO1xufTtcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZURlc2NyaXB0aW9uRmllbGQgPSAoKSA9PiB7XG4gIGNvbnN0IHRhc2tEZXNjcmlwdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIHRhc2tEZXNjcmlwdGlvbi5zZXRBdHRyaWJ1dGUoXCJjb250ZW50RWRpdGFibGVcIiwgXCJ0cnVlXCIpO1xuICB0YXNrRGVzY3JpcHRpb24uc2V0QXR0cmlidXRlKFwiZGF0YS10ZXh0XCIsIFwiVGFzayBEZXNjcmlwdGlvblwiKTtcbiAgcmV0dXJuIHRhc2tEZXNjcmlwdGlvbjtcbn07XG5cbmV4cG9ydCBjb25zdCBjcmVhdGVEZWFkbGluZUZpZWxkID0gKCkgPT4ge1xuICBsZXQgZGF0ZSA9IFwiXCI7XG4gIGNvbnN0IGR1ZURhdGVEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBkdWVEYXRlRGl2LnRleHRDb250ZW50ID0gXCJEdWUgRGF0ZTpcIjtcbiAgY29uc3QgZHVlRGF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgZHVlRGF0ZS5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsIFwiZGF0ZVwiKTtcbiAgY29uc3QgaGFuZGxlRGF0ZUNoYW5nZSA9IChlKSA9PiB7XG4gICAgZGF0ZSA9IGUudGFyZ2V0LnZhbHVlO1xuICB9O1xuICBkdWVEYXRlLmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIiwgKGUpID0+IGhhbmRsZURhdGVDaGFuZ2UoZSkpO1xuICBkdWVEYXRlRGl2LmFwcGVuZChkdWVEYXRlKTtcbiAgcmV0dXJuIGR1ZURhdGVEaXY7XG59O1xuXG5leHBvcnQgY29uc3QgY3JlYXRlUHJpb3JpdHlGaWVsZCA9ICgpID0+IHtcbiAgY29uc3QgcHJpb3JpdHlEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBwcmlvcml0eURpdi50ZXh0Q29udGVudCA9IFwiUHJpb3JpdHk6XCI7XG5cbiAgY29uc3QgbG93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgY29uc3QgbWVkaXVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgY29uc3QgaGlnaCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gIGxvdy50ZXh0Q29udGVudCA9IFwibG93XCI7XG4gIG1lZGl1bS50ZXh0Q29udGVudCA9IFwibWVkaXVtXCI7XG4gIGhpZ2gudGV4dENvbnRlbnQgPSBcImhpZ2hcIjtcblxuICBjb25zdCBoYW5kbGVQcmlvcml0eUNsaWNrID0gKGUpID0+IHtcbiAgICBsZXQgcHJpb3JpdHkgPSBcIlwiO1xuICAgIGxvdy5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlLWJ1dHRvblwiKTtcbiAgICBtZWRpdW0uY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZS1idXR0b25cIik7XG4gICAgaGlnaC5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlLWJ1dHRvblwiKTtcbiAgICBpZiAoZS50YXJnZXQuaW5uZXJUZXh0ID09IFwibG93XCIpIHtcbiAgICAgIGxvdy5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlLWJ1dHRvblwiKTtcbiAgICB9IGVsc2UgaWYgKGUudGFyZ2V0LmlubmVyVGV4dCA9PSBcIm1lZGl1bVwiKSB7XG4gICAgICBtZWRpdW0uY2xhc3NMaXN0LmFkZChcImFjdGl2ZS1idXR0b25cIik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGhpZ2guY2xhc3NMaXN0LmFkZChcImFjdGl2ZS1idXR0b25cIik7XG4gICAgfVxuICAgIHByaW9yaXR5ID0gZS50YXJnZXQuaW5uZXJUZXh0O1xuICAgIHJldHVybiBwcmlvcml0eTtcbiAgfTtcblxuICBsb3cuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiBoYW5kbGVQcmlvcml0eUNsaWNrKGUpKTtcbiAgbWVkaXVtLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4gaGFuZGxlUHJpb3JpdHlDbGljayhlKSk7XG4gIGhpZ2guYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiBoYW5kbGVQcmlvcml0eUNsaWNrKGUpKTtcbiAgcHJpb3JpdHlEaXYuYXBwZW5kKGxvdywgbWVkaXVtLCBoaWdoKTtcbiAgcmV0dXJuIHByaW9yaXR5RGl2O1xufTtcblxuY29uc3QgaGFuZGxlU3VibWl0ID0gKCkgPT4ge1xuICBjb25zdCBtYWluQ29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbWFpbi1jb250ZW50XCIpO1xuICBjb25zdCB0YXNrTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYFtkYXRhLXRleHQ9XCJUYXNrIE5hbWVcIl1gKTtcbiAgY29uc3QgdGFza0Rlc2NyaXB0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICBgW2RhdGEtdGV4dD1cIlRhc2sgRGVzY3JpcHRpb25cIl1gXG4gICk7XG4gIGNvbnN0IGR1ZURhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdpbnB1dFt0eXBlPVwiZGF0ZVwiXScpO1xuICBjb25zdCBwcmlvcml0eSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2J1dHRvbltjbGFzcz1cImFjdGl2ZS1idXR0b25cIl0nKTtcbiAgbGV0IGR1ZURhdGVUZXh0ID0gXCJcIjtcbiAgbGV0IHByaW9yaXR5VGV4dCA9IFwiXCI7XG5cbiAgaWYgKCF0YXNrTmFtZS5pbm5lckhUTUwpIHtcbiAgICByZXR1cm4gYWxlcnQoXCJwbGVhc2UgZmlsbCBUYXNrIE5hbWUgZmllbGRcIik7XG4gIH1cblxuICBpZiAoIWR1ZURhdGUudmFsdWUpIHtcbiAgICBkdWVEYXRlVGV4dCA9IFwibm8gZHVlIGRhdGVcIjtcbiAgfSBlbHNlIHtcbiAgICBkdWVEYXRlVGV4dCA9IGR1ZURhdGUudmFsdWU7XG4gIH1cblxuICBpZiAoIXByaW9yaXR5KSB7XG4gICAgcHJpb3JpdHlUZXh0ID0gXCJubyBwcmlvcml0eSBzZXRcIjtcbiAgfSBlbHNlIHtcbiAgICBwcmlvcml0eVRleHQgPSBwcmlvcml0eS5pbm5lckhUTUw7XG4gIH1cblxuICBpZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oYCR7dGFza05hbWUuaW5uZXJIVE1MfWApICE9PSBudWxsKSB7XG4gICAgcmV0dXJuIGFsZXJ0KGBUYXNrICR7dGFza05hbWUuaW5uZXJIVE1MfSBhbHJlYWR5IGV4aXN0IWApO1xuICB9XG5cbiAgY29uc3QgZGF0ZUFkZGVkID0gbmV3IERhdGUoKS50b0lTT1N0cmluZygpO1xuXG4gIGNvbnN0IG5ld1Rhc2sgPSB0YXNrRmFjdG9yeShcbiAgICBgJHt0YXNrTmFtZS50ZXh0Q29udGVudH1gLFxuICAgIGAke3Rhc2tEZXNjcmlwdGlvbi50ZXh0Q29udGVudH1gLFxuICAgIGAke2R1ZURhdGVUZXh0fWAsXG4gICAgYCR7cHJpb3JpdHlUZXh0fWAsXG4gICAgZGF0ZUFkZGVkXG4gICk7XG5cbiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oYCR7dGFza05hbWUudGV4dENvbnRlbnR9YCwgSlNPTi5zdHJpbmdpZnkobmV3VGFzaykpO1xuXG4gIG1haW5Db250ZW50LnJlcGxhY2VDaGlsZHJlbigpO1xuICBkaXNwbGF5VGFza3MoKTtcbn07XG5cbmNvbnN0IGNyZWF0ZVN1Ym1pdEJ1dHRvbiA9ICgpID0+IHtcbiAgY29uc3Qgc3VibWl0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgc3VibWl0LnRleHRDb250ZW50ID0gXCJhZGRcIjtcbiAgc3VibWl0LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBoYW5kbGVTdWJtaXQpO1xuICByZXR1cm4gc3VibWl0O1xufTtcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZUNhbmNlbEJ1dHRvbiA9ICgpID0+IHtcbiAgY29uc3QgY2FuY2VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgY2FuY2VsLnRleHRDb250ZW50ID0gXCJjYW5jZWxcIjtcbiAgY2FuY2VsLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgY29uc3QgbmV3QWRkVGFza0RpdiA9IGNyZWF0ZUFkZHRhc2tEaXYoKTtcbiAgICBjb25zdCB0YXNrRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjdGFzay1mb3JtXCIpO1xuICAgIHRhc2tGb3JtLnJlcGxhY2VXaXRoKG5ld0FkZFRhc2tEaXYpO1xuICB9KTtcbiAgcmV0dXJuIGNhbmNlbDtcbn07XG4iLCJpbXBvcnQgeyBkaXNwbGF5VGFza3NJblByb2plY3QgfSBmcm9tIFwiLi9kaXNwbGF5UHJvamVjdFwiO1xuXG5jb25zdCBjcmVhdGVQb3BVcERpdiA9ICh0YXNrVG9SZXN0b3JlLCBpbmRleE9mQ29tcGxldGVkVGFzaykgPT4ge1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwibWFpbi1jb250ZW50XCIpO1xuICBjb25zdCBwb3BVcERpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIHBvcFVwRGl2LmlkID0gXCJwb3AtdXBcIjtcbiAgcG9wVXBEaXYudGV4dENvbnRlbnQgPSBgMSB0YXNrIGNvbXBsZXRlZCEgICBgO1xuXG4gIGNvbnN0IHNwYW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcbiAgc3Bhbi50ZXh0Q29udGVudCA9IFwidW5kb1wiO1xuICBzcGFuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PlxuICAgIGhhbmRsZVVuZG8odGFza1RvUmVzdG9yZSwgcG9wVXBEaXYsIGluZGV4T2ZDb21wbGV0ZWRUYXNrKVxuICApO1xuICBwb3BVcERpdi5hcHBlbmQoc3Bhbik7XG5cbiAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgcG9wVXBEaXYucmVtb3ZlKCk7XG4gIH0sIDIwMDApO1xuICBkb2N1bWVudC5ib2R5LmFwcGVuZChwb3BVcERpdik7XG59O1xuXG5jb25zdCBoYW5kbGVVbmRvID0gKHRhc2tUb1Jlc3RvcmUsIHBvcFVwRGl2LCBpbmRleE9mQ29tcGxldGVkVGFzaykgPT4ge1xuICBjb25zdCBzZWxlY3RlZFByb2plY3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2plY3QtdGl0bGVcIikudGV4dENvbnRlbnQ7XG4gIGNvbnN0IHByb2plY3RzID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcIlByb2plY3RzXCIpKTtcbiAgY29uc3QgaW5kZXhvZlNlbGVjdGVkUHJvamVjdCA9IHByb2plY3RzLmZpbmRJbmRleChcbiAgICAocHJvamVjdCkgPT4gcHJvamVjdC50aXRsZSA9PSBzZWxlY3RlZFByb2plY3RcbiAgKTtcbiAgY29uc3QgcHJvamVjdCA9IHByb2plY3RzW2luZGV4b2ZTZWxlY3RlZFByb2plY3RdO1xuICBwcm9qZWN0LnRhc2tzLnNwbGljZShpbmRleE9mQ29tcGxldGVkVGFzaywgMCwgdGFza1RvUmVzdG9yZSk7XG4gIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiUHJvamVjdHNcIiwgSlNPTi5zdHJpbmdpZnkocHJvamVjdHMpKTtcblxuICBwb3BVcERpdi5yZW1vdmUoKTtcbiAgZGlzcGxheVRhc2tzSW5Qcm9qZWN0KHNlbGVjdGVkUHJvamVjdCk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVQb3BVcERpdjtcbiIsImltcG9ydCB7IGRpc3BsYXlUYXNrc0luUHJvamVjdCB9IGZyb20gXCIuL2Rpc3BsYXlQcm9qZWN0XCI7XG5pbXBvcnQgY3JlYXRlUG9wVXBEaXYgZnJvbSBcIi4vcG9wVXBGb3JQcm9qZWNUYXNrc0RvbmVcIjtcblxuY29uc3QgY3JlYXRlQ2hlY2tib3ggPSAoKSA9PiB7XG4gIGNvbnN0IGNoZWNrQm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xuICBjaGVja0JveC50eXBlID0gXCJjaGVja2JveFwiO1xuXG4gIGNoZWNrQm94LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4gaGFuZGxlQ2hlY2tib3hDbGljayhlKSk7XG4gIHJldHVybiBjaGVja0JveDtcbn07XG5cbmNvbnN0IGhhbmRsZUNoZWNrYm94Q2xpY2sgPSAoZSkgPT4ge1xuICBjb25zdCBwcm9qZWN0VGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2plY3QtdGl0bGVcIikudGV4dENvbnRlbnQ7XG4gIGNvbnN0IHRhc2tDb21wbGV0ZWRUaXRsZSA9IGUudGFyZ2V0LnBhcmVudEVsZW1lbnQuaWQ7XG5cbiAgY29uc3QgcHJvamVjdHMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiUHJvamVjdHNcIikpO1xuXG4gIGNvbnN0IGluZGV4b2ZTZWxlY3RlZFByb2plY3QgPSBwcm9qZWN0cy5maW5kSW5kZXgoXG4gICAgKHByb2plY3QpID0+IHByb2plY3QudGl0bGUgPT0gcHJvamVjdFRpdGxlXG4gICk7XG5cbiAgY29uc3QgcHJvamVjdCA9IHByb2plY3RzW2luZGV4b2ZTZWxlY3RlZFByb2plY3RdO1xuXG4gIGNvbnN0IGluZGV4b2ZTZWxlY3RlZFRhc2sgPSBwcm9qZWN0LnRhc2tzLmZpbmRJbmRleChcbiAgICAodGFzaykgPT4gdGFzay50aXRsZSA9PSB0YXNrQ29tcGxldGVkVGl0bGVcbiAgKTtcbiAgY29uc3QgdGFza1RvUmVzdG9yZSA9IHByb2plY3QudGFza3NbaW5kZXhvZlNlbGVjdGVkVGFza107XG5cbiAgcHJvamVjdC50YXNrcy5zcGxpY2UoaW5kZXhvZlNlbGVjdGVkVGFzaywgMSk7XG4gIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiUHJvamVjdHNcIiwgSlNPTi5zdHJpbmdpZnkocHJvamVjdHMpKTtcblxuICBkaXNwbGF5VGFza3NJblByb2plY3QocHJvamVjdFRpdGxlKTtcbiAgY3JlYXRlUG9wVXBEaXYodGFza1RvUmVzdG9yZSwgaW5kZXhvZlNlbGVjdGVkVGFzayk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVDaGVja2JveDtcbiIsImltcG9ydCB7IGRpc3BsYXlUYXNrc0luUHJvamVjdCB9IGZyb20gXCIuL2Rpc3BsYXlQcm9qZWN0XCI7XG5pbXBvcnQgeyBjcmVhdGVUYXNrbmFtZUZpZWxkLCBjcmVhdGVEZXNjcmlwdGlvbkZpZWxkIH0gZnJvbSBcIi4vdGFza0Zvcm1cIjtcblxuY29uc3QgZWRpdFRhc2sgPSAoZSkgPT4ge1xuICBjb25zdCB0YXNrTmFtZSA9IGUudGFyZ2V0LnBhcmVudEVsZW1lbnQuaWQudG9TdHJpbmcoKTtcbiAgY29uc3QgdGFza1RvRWRpdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYFtpZD0nJHt0YXNrTmFtZX0nXWApO1xuICBpZiAodGFza05hbWUgPT0gXCJcIikge1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCB0YXNrID0gZmluZFRhc2tGcm9tUHJvamVjdCh0YXNrTmFtZSk7XG4gIC8vICAgZmluZGluZGV4T2ZUYXNrRnJvbVByb2plY3QodGFza05hbWUpO1xuICB0YXNrVG9FZGl0LnJlcGxhY2VXaXRoKGNyZWF0ZUZpZWxkcyh0YXNrKSk7XG4gIC8vIGNvbnNvbGUubG9nKGUudGFyZ2V0LnBhcmVudEVsZW1lbnQuaWQpXG59O1xuXG5jb25zdCBjcmVhdGVGaWVsZHMgPSAodGFzaykgPT4ge1xuICBjb25zdCBlZGl0RmllbGRzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgY29uc3QgdGFrc05hbWVGaWVsZCA9IGNyZWF0ZVRhc2tuYW1lRmllbGQoKTtcbiAgY29uc3QgZGVzY3JpcHRpb25GaWVsZCA9IGNyZWF0ZURlc2NyaXB0aW9uRmllbGQoKTtcbiAgY29uc3QgZGVhZGxpbmVGaWVsZCA9IGNyZWF0ZURlYWRsaW5lRmllbGQodGFzayk7XG4gIGNvbnN0IHByaW9yaXR5RmllbGQgPSBjcmVhdGVQcmlvcml0eUZpZWxkKHRhc2spO1xuICBjb25zdCBjYW5jZWxCdXR0b24gPSBjcmVhdGVDYW5jZWxCdXR0b24oKTtcbiAgY29uc3QgYWRkQnV0dG9uID0gY3JlYXRlQWRkQnV0dG9uKHRhc2spO1xuXG4gIHRha3NOYW1lRmllbGQudGV4dENvbnRlbnQgPSB0YXNrLnRpdGxlO1xuICBkZXNjcmlwdGlvbkZpZWxkLnRleHRDb250ZW50ID0gdGFzay5kZXNjcmlwdGlvbjtcblxuICBlZGl0RmllbGRzLmFwcGVuZChcbiAgICB0YWtzTmFtZUZpZWxkLFxuICAgIGRlc2NyaXB0aW9uRmllbGQsXG4gICAgZGVhZGxpbmVGaWVsZCxcbiAgICBwcmlvcml0eUZpZWxkLFxuICAgIGNhbmNlbEJ1dHRvbixcbiAgICBhZGRCdXR0b25cbiAgKTtcbiAgcmV0dXJuIGVkaXRGaWVsZHM7XG59O1xuXG5jb25zdCBjcmVhdGVEZWFkbGluZUZpZWxkID0gKHRhc2spID0+IHtcbiAgY29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgY29uc3QgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gIGlucHV0LnR5cGUgPSBcImRhdGVcIjtcbiAgaW5wdXQudmFsdWUgPSB0YXNrLmR1ZURhdGU7XG4gIGRpdi50ZXh0Q29udGVudCA9IFwiRHVlIGRhdGU6XCI7XG4gIGRpdi5hcHBlbmQoaW5wdXQpO1xuICByZXR1cm4gZGl2O1xufTtcblxuY29uc3QgY3JlYXRlUHJpb3JpdHlGaWVsZCA9ICh0YXNrKSA9PiB7XG4gIGNvbnN0IHByaW9yaXR5RGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgcHJpb3JpdHlEaXYudGV4dENvbnRlbnQgPSBcIlByaW9yaXR5OlwiO1xuXG4gIGNvbnN0IGxvdyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gIGNvbnN0IG1lZGl1bSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gIGNvbnN0IGhpZ2ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICBsb3cudGV4dENvbnRlbnQgPSBcImxvd1wiO1xuICBtZWRpdW0udGV4dENvbnRlbnQgPSBcIm1lZGl1bVwiO1xuICBoaWdoLnRleHRDb250ZW50ID0gXCJoaWdoXCI7XG5cbiAgY29uc3QgaGFuZGxlUHJpb3JpdHlDbGljayA9IChlKSA9PiB7XG4gICAgbGV0IHByaW9yaXR5ID0gXCJcIjtcbiAgICBsb3cuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZS1idXR0b25cIik7XG4gICAgbWVkaXVtLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmUtYnV0dG9uXCIpO1xuICAgIGhpZ2guY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZS1idXR0b25cIik7XG4gICAgaWYgKGUudGFyZ2V0LmlubmVyVGV4dCA9PSBcImxvd1wiIHx8IHRhc2sucHJpb3JpdHkgPT0gXCJsb3dcIikge1xuICAgICAgbG93LmNsYXNzTGlzdC5hZGQoXCJhY3RpdmUtYnV0dG9uXCIpO1xuICAgIH0gZWxzZSBpZiAoZS50YXJnZXQuaW5uZXJUZXh0ID09IFwibWVkaXVtXCIgfHwgdGFzay5wcmlvcml0eSA9PSBcIm1lZGl1bVwiKSB7XG4gICAgICBtZWRpdW0uY2xhc3NMaXN0LmFkZChcImFjdGl2ZS1idXR0b25cIik7XG4gICAgfSBlbHNlIGlmIChlLnRhcmdldC5pbm5lclRleHQgPT0gXCJoaWdoXCIgfHwgdGFzay5wcmlvcml0eSA9PSBcImhpZ2hcIikge1xuICAgICAgaGlnaC5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlLWJ1dHRvblwiKTtcbiAgICB9XG4gICAgcHJpb3JpdHkgPSBlLnRhcmdldC5pbm5lclRleHQ7XG4gICAgcmV0dXJuIHByaW9yaXR5O1xuICB9O1xuXG4gIGlmICh0YXNrLnByaW9yaXR5ID09IFwibG93XCIpIHtcbiAgICBsb3cuY2xhc3NMaXN0LmFkZChcImFjdGl2ZS1idXR0b25cIik7XG4gIH0gZWxzZSBpZiAodGFzay5wcmlvcml0eSA9PSBcIm1lZGl1bVwiKSB7XG4gICAgbWVkaXVtLmNsYXNzTGlzdC5hZGQoXCJhY3RpdmUtYnV0dG9uXCIpO1xuICB9IGVsc2UgaWYgKHRhc2sucHJpb3JpdHkgPT0gXCJoaWdoXCIpIHtcbiAgICBoaWdoLmNsYXNzTGlzdC5hZGQoXCJhY3RpdmUtYnV0dG9uXCIpO1xuICB9XG5cbiAgbG93LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4gaGFuZGxlUHJpb3JpdHlDbGljayhlKSk7XG4gIG1lZGl1bS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IGhhbmRsZVByaW9yaXR5Q2xpY2soZSkpO1xuICBoaWdoLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4gaGFuZGxlUHJpb3JpdHlDbGljayhlKSk7XG4gIHByaW9yaXR5RGl2LmFwcGVuZChsb3csIG1lZGl1bSwgaGlnaCk7XG4gIHJldHVybiBwcmlvcml0eURpdjtcbn07XG5cbmNvbnN0IGZpbmRUYXNrRnJvbVByb2plY3QgPSAodGFza05hbWUpID0+IHtcbiAgY29uc3QgcHJvamVjdHMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiUHJvamVjdHNcIikpO1xuICBjb25zdCBwcm9qZWN0VGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2plY3QtdGl0bGVcIikudGV4dENvbnRlbnQ7XG4gIGNvbnN0IHRhc2tzRnJvbVByb2plY3QgPSBwcm9qZWN0cy5maW5kKFxuICAgIChwcm9qZWN0KSA9PiBwcm9qZWN0LnRpdGxlID09IHByb2plY3RUaXRsZVxuICApLnRhc2tzO1xuICBjb25zdCB0YXNrID0gdGFza3NGcm9tUHJvamVjdC5maW5kKCh0YXNrKSA9PiB0YXNrLnRpdGxlID09PSB0YXNrTmFtZSk7XG4gIHJldHVybiB0YXNrO1xuICAvLyBjb25zdCBpbmRleE9mVGFzayA9IHRhc2tzRnJvbVByb2plY3QuZmluZEluZGV4KHRhc2s9PnRhc2sudGl0bGU9PXRhc2tOYW1lKVxuICAvLyBjb25zb2xlLmxvZyh0YXNrKVxufTtcblxuY29uc3QgY3JlYXRlQ2FuY2VsQnV0dG9uID0gKCkgPT4ge1xuICBjb25zdCBwcm9qZWN0TmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvamVjdC10aXRsZVwiKS50ZXh0Q29udGVudDtcbiAgY29uc3QgYnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgYnV0dG9uLnR5cGUgPSBcImJ1dHRvblwiO1xuICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IGRpc3BsYXlUYXNrc0luUHJvamVjdChwcm9qZWN0TmFtZSkpO1xuICBidXR0b24udGV4dENvbnRlbnQgPSBcIkNhbmNlbFwiO1xuXG4gIHJldHVybiBidXR0b247XG59O1xuXG5jb25zdCBoYW5kbGVTdWJtaXRCdXR0b25DbGljayA9ICh0YXNrLCBpbmRleCkgPT4ge1xuICBjb25zdCBwcm9qZWN0TmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvamVjdC10aXRsZVwiKS50ZXh0Q29udGVudDtcbiAgY29uc3QgbmV3VGFza05hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICdbZGF0YS10ZXh0PVwiVGFzayBOYW1lXCJdJ1xuICApLnRleHRDb250ZW50O1xuICBjb25zdCBuZXdEZXNjcmlwdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgJ1tkYXRhLXRleHQ9XCJUYXNrIERlc2NyaXB0aW9uXCJdJ1xuICApLnRleHRDb250ZW50O1xuICBjb25zdCBuZXdEYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaW5wdXRbdHlwZT1cImRhdGVcIl0nKS52YWx1ZTtcbiAgY29uc3QgbmV3UHJpb3JpdHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmFjdGl2ZS1idXR0b25cIik7XG5cbiAgdGFzay50aXRsZSA9IG5ld1Rhc2tOYW1lO1xuICB0YXNrLmRlc2NyaXB0aW9uID0gbmV3RGVzY3JpcHRpb247XG5cbiAgaWYgKCFuZXdUYXNrTmFtZSkge1xuICAgIGRpc3BsYXlUYXNrc0luUHJvamVjdChwcm9qZWN0TmFtZSk7XG4gICAgcmV0dXJuIGFsZXJ0KFwiSW5wdXQgYSB0YXNrIG5hbWVcIik7XG4gIH1cblxuICBpZiAoIXRhc2suZHVlRGF0ZSkge1xuICAgIHRhc2suZHVlRGF0ZSA9IFwibm8gZHVlIGRhdGVcIjtcbiAgfSBlbHNlIHtcbiAgICB0YXNrLmR1ZURhdGUgPSBuZXdEYXRlO1xuICB9XG5cbiAgaWYgKCFuZXdQcmlvcml0eSkge1xuICAgIHRhc2sucHJpb3JpdHkgPSBcIm5vIHByaW9yaXR5IHNldFwiO1xuICB9IGVsc2Uge1xuICAgIHRhc2sucHJpb3JpdHkgPSBuZXdQcmlvcml0eS50ZXh0Q29udGVudDtcbiAgfVxuXG4gIGFkZEVkaXRlZFRhc2tUb1Byb2plY3QodGFzaywgaW5kZXgpO1xuICBkaXNwbGF5VGFza3NJblByb2plY3QocHJvamVjdE5hbWUpO1xufTtcblxuY29uc3QgYWRkRWRpdGVkVGFza1RvUHJvamVjdCA9ICh0YXNrLCBpbmRleCkgPT4ge1xuICBjb25zdCBwcm9qZWN0cyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJQcm9qZWN0c1wiKSk7XG4gIGNvbnN0IHByb2plY3RUaXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvamVjdC10aXRsZVwiKS50ZXh0Q29udGVudDtcblxuICBjb25zdCBwcm9qZWN0ID0gcHJvamVjdHMuZmluZCgocHJvamVjdCkgPT4gcHJvamVjdC50aXRsZSA9PSBwcm9qZWN0VGl0bGUpO1xuICBwcm9qZWN0LnRhc2tzW2luZGV4XSA9IHRhc2s7XG4gIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiUHJvamVjdHNcIiwgSlNPTi5zdHJpbmdpZnkocHJvamVjdHMpKTtcbn07XG5cbmNvbnN0IGNyZWF0ZUFkZEJ1dHRvbiA9ICh0YXNrKSA9PiB7XG4gIGNvbnN0IGFkZEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gIGFkZEJ1dHRvbi50eXBlID0gXCJidXR0b25cIjtcbiAgYWRkQnV0dG9uLnRleHRDb250ZW50ID0gXCJzdWJtaXRcIjtcbiAgY29uc3QgaW5kZXggPSBmaW5kSW5kZXhPZlRhc2tGcm9tUHJvamVjdCh0YXNrLnRpdGxlKTtcblxuICBhZGRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+XG4gICAgaGFuZGxlU3VibWl0QnV0dG9uQ2xpY2sodGFzaywgaW5kZXgpXG4gICk7XG4gIHJldHVybiBhZGRCdXR0b247XG59O1xuY29uc3QgZmluZEluZGV4T2ZUYXNrRnJvbVByb2plY3QgPSAodGFza05hbWUpID0+IHtcbiAgY29uc3QgcHJvamVjdHMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiUHJvamVjdHNcIikpO1xuICBjb25zdCBwcm9qZWN0VGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2plY3QtdGl0bGVcIikudGV4dENvbnRlbnQ7XG5cbiAgY29uc3QgcHJvamVjdCA9IHByb2plY3RzLmZpbmQoKHByb2plY3QpID0+IHByb2plY3QudGl0bGUgPT0gcHJvamVjdFRpdGxlKTtcbiAgY29uc3QgaW5kZXhPZlRhc2sgPSBwcm9qZWN0LnRhc2tzLmZpbmRJbmRleCgodGFzaykgPT4gdGFzay50aXRsZSA9PSB0YXNrTmFtZSk7XG4gIHJldHVybiBpbmRleE9mVGFzaztcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGVkaXRUYXNrO1xuIiwiaW1wb3J0IHsgY3JlYXRlQWRkUHJvamVjdERpdiB9IGZyb20gXCIuL2xheW91dFwiO1xuaW1wb3J0IHRhc2tGYWN0b3J5IGZyb20gXCIuL3Rhc2tGYWN0b3J5XCI7XG5pbXBvcnQgY3JlYXRlQ2hlY2tib3ggZnJvbSBcIi4vY2hlY2tCb3hGb3JQcm9qZWN0VGFza3NcIjtcbmltcG9ydCBlZGl0VGFzayBmcm9tIFwiLi9lZGl0VGFza0luUHJvamVjdFwiO1xuLy8gaW1wb3J0IHsgIH0gZnJvbSBcIi4vbGF5b3V0XCI7XG5pbXBvcnQge1xuICBjcmVhdGVUYXNrbmFtZUZpZWxkLFxuICBjcmVhdGVEZXNjcmlwdGlvbkZpZWxkLFxuICBjcmVhdGVEZWFkbGluZUZpZWxkLFxuICBjcmVhdGVQcmlvcml0eUZpZWxkLFxufSBmcm9tIFwiLi90YXNrRm9ybVwiO1xuXG5jb25zdCBkaXNQbGF5UHJvamVjdFRpdGxlSW5NYWluQ29udGVudCA9IChwcm9qZWN0TmFtZSkgPT4ge1xuICBjb25zdCBtYWluQ29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbWFpbi1jb250ZW50XCIpO1xuICBjb25zdCBwcm9qZWN0VGl0bGVEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBwcm9qZWN0VGl0bGVEaXYuaWQgPSBcInByb2plY3QtdGl0bGVcIjtcbiAgcHJvamVjdFRpdGxlRGl2LnRleHRDb250ZW50ID0gcHJvamVjdE5hbWU7XG4gIG1haW5Db250ZW50LnJlcGxhY2VDaGlsZHJlbigpO1xuICBtYWluQ29udGVudC5hcHBlbmQocHJvamVjdFRpdGxlRGl2KTtcbiAgcmV0dXJuIG1haW5Db250ZW50O1xufTtcblxuLy9rZXk6IFwicHJvamVjc3RcIiAgIFt7dGl0bGU6J3Byb2plY3QgdGl0bGUnLCB0YXNrczpbe25hbWU6dGFzazEsIGRlc2NyaXB0aW9uOid0YXNrIGRlc2NyaXB0aW9uJyxkdWUgZGF0ZToxMjMxMjMsIHByaW9yaXR5OiAnJywgZGF0ZSBjcmVhdGVkfV0gfV1cbmNvbnN0IGRpc3BsYXlQcm9qZWN0TmFtZXNJblNpZGViYXIgPSAoKSA9PiB7XG4gIGNvbnN0IHNpZGVCYXJQcm9qZWN0c0RpdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjc2lkZWJhci1wcm9qZWN0c1wiKTtcbiAgY29uc3QgcHJvamVjdHMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiUHJvamVjdHNcIikpO1xuICBpZiAoIXByb2plY3RzKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIHNpZGVCYXJQcm9qZWN0c0Rpdi5yZXBsYWNlQ2hpbGRyZW4oKTtcbiAgc2lkZUJhclByb2plY3RzRGl2LnRleHRDb250ZW50ID0gXCJQcm9qZWN0c1wiO1xuXG4gIGNvbnN0IGhhbmRsZVByb2plY3ROYW1lQ2xpY2sgPSAocHJvamVjdE5hbWVDbGlja2VkKSA9PiB7XG4gICAgZGlzUGxheVByb2plY3RUaXRsZUluTWFpbkNvbnRlbnQocHJvamVjdE5hbWVDbGlja2VkKTtcbiAgICBkaXNwbGF5VGFza3NJblByb2plY3QocHJvamVjdE5hbWVDbGlja2VkKTtcbiAgfTtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IHByb2plY3RzLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3QgcHJvamVjdE5hbWVEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIHByb2plY3ROYW1lRGl2LnRleHRDb250ZW50ID0gcHJvamVjdHNbaV0udGl0bGU7XG4gICAgc2lkZUJhclByb2plY3RzRGl2LmFwcGVuZChwcm9qZWN0TmFtZURpdik7XG4gICAgcHJvamVjdE5hbWVEaXYuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PlxuICAgICAgaGFuZGxlUHJvamVjdE5hbWVDbGljayhlLnRhcmdldC50ZXh0Q29udGVudClcbiAgICApO1xuICB9XG4gIHNpZGVCYXJQcm9qZWN0c0Rpdi5hcHBlbmQoY3JlYXRlQWRkUHJvamVjdERpdigpKTtcbn07XG5cbmNvbnN0IGNyZWF0ZUNhbmNlbEJ1dHRvbiA9IChhZGRUYXNrRGl2LCB0YXNrRm9ybSkgPT4ge1xuICBjb25zdCBjYW5jZWxCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICBjYW5jZWxCdXR0b24udHlwZSA9IFwiYnV0dG9uXCI7XG4gIGNhbmNlbEJ1dHRvbi50ZXh0Q29udGVudCA9IFwiY2FuY2VsXCI7XG4gIGNhbmNlbEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT5cbiAgICBoYW5kbGVDYW5jZWxCdXR0b25DbGljayhhZGRUYXNrRGl2LCB0YXNrRm9ybSlcbiAgKTtcbiAgY29uc3QgaGFuZGxlQ2FuY2VsQnV0dG9uQ2xpY2sgPSAoYWRkVGFza0RpdiwgdGFza0Zvcm0pID0+IHtcbiAgICB0YXNrRm9ybS5yZXBsYWNlV2l0aChhZGRUYXNrRGl2KTtcbiAgfTtcbiAgcmV0dXJuIGNhbmNlbEJ1dHRvbjtcbn07XG5cbmNvbnN0IGNyZWF0ZVN1Ym1pdEJ1dHRvbiA9ICgpID0+IHtcbiAgY29uc3Qgc3VibWl0QnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgc3VibWl0QnV0dG9uLnR5cGUgPSBcImJ1dHRvblwiO1xuICBzdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSBcIkFkZFwiO1xuICBzdWJtaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGhhbmRsZVN1Ym1pdEJ1dHRvbkNsaWNrKTtcbiAgcmV0dXJuIHN1Ym1pdEJ1dHRvbjtcbn07XG5cbmNvbnN0IGhhbmRsZVN1Ym1pdEJ1dHRvbkNsaWNrID0gKCkgPT4ge1xuICBjb25zdCBwcm9qZWN0TmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvamVjdC10aXRsZVwiKTtcblxuICBjb25zdCB0YXNrTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYFtkYXRhLXRleHQ9XCJUYXNrIE5hbWVcIl1gKTtcbiAgY29uc3QgdGFza0Rlc2NyaXB0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICBgW2RhdGEtdGV4dD1cIlRhc2sgRGVzY3JpcHRpb25cIl1gXG4gICk7XG4gIGNvbnN0IGR1ZURhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdpbnB1dFt0eXBlPVwiZGF0ZVwiXScpO1xuICBjb25zdCBwcmlvcml0eSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2J1dHRvbltjbGFzcz1cImFjdGl2ZS1idXR0b25cIl0nKTtcbiAgbGV0IGR1ZURhdGVUZXh0ID0gXCJcIjtcbiAgbGV0IHByaW9yaXR5VGV4dCA9IFwiXCI7XG5cbiAgLy8gaWYgKCF0YXNrTmFtZS5pbm5lckhUTUwpIHtcbiAgLy8gICByZXR1cm4gYWxlcnQoXCJwbGVhc2UgZmlsbCBUYXNrIE5hbWUgZmllbGRcIik7XG4gIC8vIH1cblxuICBpZiAoIWR1ZURhdGUudmFsdWUpIHtcbiAgICBkdWVEYXRlVGV4dCA9IFwibm8gZHVlIGRhdGVcIjtcbiAgfSBlbHNlIHtcbiAgICBkdWVEYXRlVGV4dCA9IGR1ZURhdGUudmFsdWU7XG4gIH1cblxuICBpZiAoIXByaW9yaXR5KSB7XG4gICAgcHJpb3JpdHlUZXh0ID0gXCJubyBwcmlvcml0eSBzZXRcIjtcbiAgfSBlbHNlIHtcbiAgICBwcmlvcml0eVRleHQgPSBwcmlvcml0eS5pbm5lckhUTUw7XG4gIH1cblxuICBjb25zdCBkYXRlQWRkZWQgPSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCk7XG5cbiAgY29uc3QgbmV3VGFzayA9IHRhc2tGYWN0b3J5KFxuICAgIGAke3Rhc2tOYW1lLnRleHRDb250ZW50fWAsXG4gICAgYCR7dGFza0Rlc2NyaXB0aW9uLnRleHRDb250ZW50fWAsXG4gICAgYCR7ZHVlRGF0ZVRleHR9YCxcbiAgICBgJHtwcmlvcml0eVRleHR9YCxcbiAgICBkYXRlQWRkZWRcbiAgKTtcblxuICBhZGRUYXNrVG9Qcm9qZWN0KG5ld1Rhc2spO1xuICBkaXNwbGF5VGFza3NJblByb2plY3QocHJvamVjdE5hbWUudGV4dENvbnRlbnQpO1xufTtcblxuY29uc3QgYWRkVGFza1RvUHJvamVjdCA9IChuZXdUYXNrKSA9PiB7XG4gIGNvbnN0IHByb2plY3RzID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcIlByb2plY3RzXCIpKTtcbiAgY29uc3Qgc2VsZWN0ZWRQcm9qZWN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9qZWN0LXRpdGxlXCIpLnRleHRDb250ZW50O1xuICBjb25zdCBpbmRleG9mU2VsZWN0ZWRQcm9qZWN0ID0gcHJvamVjdHMuZmluZEluZGV4KFxuICAgIChwcm9qZWN0KSA9PiBwcm9qZWN0LnRpdGxlID09IHNlbGVjdGVkUHJvamVjdFxuICApO1xuICBjb25zdCB0YXNrQXJyYXkgPSBwcm9qZWN0c1tpbmRleG9mU2VsZWN0ZWRQcm9qZWN0XS50YXNrcztcbiAgLy8gY29uc3QgbmV3VGFza0FycmF5ID0gcHJldmlvdXNUYXNrQXJyYXkucHVzaChuZXdUYXNrKVxuICB0YXNrQXJyYXkucHVzaChuZXdUYXNrKTtcbiAgcHJvamVjdHNbaW5kZXhvZlNlbGVjdGVkUHJvamVjdF0udGFza3MgPSB0YXNrQXJyYXk7XG4gIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiUHJvamVjdHNcIiwgSlNPTi5zdHJpbmdpZnkocHJvamVjdHMpKTtcbn07XG5cbmNvbnN0IGRpc3BsYXlUYXNrc0luUHJvamVjdCA9IChwcm9qZWN0TmFtZSkgPT4ge1xuICBjb25zdCBtYWluQ29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbWFpbi1jb250ZW50XCIpO1xuICBtYWluQ29udGVudC5yZXBsYWNlQ2hpbGRyZW4oKTtcbiAgZGlzUGxheVByb2plY3RUaXRsZUluTWFpbkNvbnRlbnQocHJvamVjdE5hbWUpO1xuICBjb25zdCBwcm9qZWN0Q29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgY29uc3QgcHJvamVjdHMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiUHJvamVjdHNcIikpO1xuXG4gIGlmICghcHJvamVjdHMpIHtcbiAgICBjb25zb2xlLmxvZyhwcm9qZWN0cywgY3JlYXRlUHJvamVjdFRhc2tGb3JtKCkpO1xuICAgIHJldHVybiBtYWluQ29udGVudC5hcHBlbmQoY3JlYXRlUHJvamVjdFRhc2tGb3JtKCkpO1xuICB9XG4gIGNvbnN0IGluZGV4T2ZQcm9qZWN0TmFtZSA9IHByb2plY3RzXG4gICAgLm1hcCgob2JqZWN0KSA9PiBvYmplY3QudGl0bGUpXG4gICAgLmluZGV4T2YocHJvamVjdE5hbWUpO1xuICBjb25zdCBwcm9qZWN0ID0gcHJvamVjdHNbaW5kZXhPZlByb2plY3ROYW1lXTtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IHByb2plY3QudGFza3MubGVuZ3RoOyBpKyspIHtcbiAgICBwcm9qZWN0Q29udGFpbmVyLmFwcGVuZChjcmVhdGVUYXNrRGl2KHByb2plY3QudGFza3NbaV0pKTtcbiAgfVxuICBtYWluQ29udGVudC5hcHBlbmQocHJvamVjdENvbnRhaW5lciwgY3JlYXRlUHJvamVjdFRhc2tGb3JtKCkpO1xufTtcblxuY29uc3QgY3JlYXRlVGFza0RpdiA9ICh0YXNrKSA9PiB7XG4gIGNvbnN0IHRhc2tEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICB0YXNrRGl2LmlkID0gdGFzay50aXRsZTtcbiAgY29uc3QgdGFza05hbWVEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuXG4gIGNvbnN0IHRhc2tEZXRhaWxzRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgY29uc3QgZHVlRGF0ZURpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGNvbnN0IHByaW9yaXR5RGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcblxuICBjb25zdCBjaGVja0JveCA9IGNyZWF0ZUNoZWNrYm94KCk7XG5cbiAgdGFza05hbWVEaXYuaW5uZXJIVE1MID0gYFRhc2s6JHt0YXNrLnRpdGxlfWA7XG4gIHRhc2tEZXRhaWxzRGl2LmlubmVySFRNTCA9IGBkZXRhaWxzOiR7dGFzay5kZXNjcmlwdGlvbn1gO1xuICBkdWVEYXRlRGl2LnRleHRDb250ZW50ID0gYER1ZSBkYXRlOiR7dGFzay5kdWVEYXRlfWA7XG4gIHByaW9yaXR5RGl2LnRleHRDb250ZW50ID0gYFByaW9yaXR5OiR7dGFzay5wcmlvcml0eX1gO1xuICB0YXNrRGl2LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4gZWRpdFRhc2soZSkpO1xuXG4gIHRhc2tEaXYuYXBwZW5kKFxuICAgIGNoZWNrQm94LFxuICAgIHRhc2tOYW1lRGl2LFxuICAgIHRhc2tEZXRhaWxzRGl2LFxuICAgIGR1ZURhdGVEaXYsXG4gICAgcHJpb3JpdHlEaXZcbiAgKTtcbiAgcmV0dXJuIHRhc2tEaXY7XG59O1xuXG5jb25zdCBjcmVhdGVQcm9qZWN0VGFza0Zvcm0gPSAoKSA9PiB7XG4gIGNvbnN0IGFkZFRhc2tEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBhZGRUYXNrRGl2LnRleHRDb250ZW50ID0gXCJBZGQgYSB0YXNrXCI7XG4gIGFkZFRhc2tEaXYuaWQgPSBcImFkZC10YXNrXCI7XG4gIGNvbnN0IHRhc2tGb3JtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgdGFza0Zvcm0uaWQgPSBcInRhc2stZm9ybVwiO1xuICBhZGRUYXNrRGl2LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiBhZGRUYXNrRGl2LnJlcGxhY2VXaXRoKHRhc2tGb3JtKSk7XG5cbiAgdGFza0Zvcm0uYXBwZW5kKFxuICAgIGNyZWF0ZVRhc2tuYW1lRmllbGQoKSxcbiAgICBjcmVhdGVEZXNjcmlwdGlvbkZpZWxkKCksXG4gICAgY3JlYXRlRGVhZGxpbmVGaWVsZCgpLFxuICAgIGNyZWF0ZVByaW9yaXR5RmllbGQoKSxcbiAgICBjcmVhdGVTdWJtaXRCdXR0b24oKSxcbiAgICBjcmVhdGVDYW5jZWxCdXR0b24oYWRkVGFza0RpdiwgdGFza0Zvcm0pXG4gICk7XG5cbiAgcmV0dXJuIGFkZFRhc2tEaXY7XG59O1xuXG5leHBvcnQge1xuICBkaXNwbGF5UHJvamVjdE5hbWVzSW5TaWRlYmFyLFxuICBkaXNQbGF5UHJvamVjdFRpdGxlSW5NYWluQ29udGVudCxcbiAgZGlzcGxheVRhc2tzSW5Qcm9qZWN0LFxufTtcbiIsImltcG9ydCBkaXNwbGF5VGFza3MgZnJvbSBcIi4vZGlzcGxheVRhc2tzXCI7XG5pbXBvcnQgdGFza0Zvcm0gZnJvbSBcIi4vdGFza0Zvcm1cIjtcbmltcG9ydCB7IGRpc3BsYXlQcm9qZWN0TmFtZXNJblNpZGViYXIsIGRpc1BsYXlQcm9qZWN0VGl0bGVJbk1haW5Db250ZW50LCBkaXNwbGF5VGFza3NJblByb2plY3QgfSBmcm9tIFwiLi9kaXNwbGF5UHJvamVjdFwiO1xuXG5pbXBvcnQgYWRkUHJvamVjdCBmcm9tIFwiLi9hZGRQcm9qZWN0XCI7XG5cbmZ1bmN0aW9uIGNyZWF0ZUhlYWRlcigpIHtcbiAgY29uc3QgaGVhZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImhlYWRlclwiKTtcbiAgY29uc3QgaGVhZGVyRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgaGVhZGVyRGl2LnRleHRDb250ZW50ID0gXCIgVG8tZG8gTGlzdFwiO1xuICBoZWFkZXIuYXBwZW5kKGhlYWRlckRpdik7XG4gIHJldHVybiBoZWFkZXI7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVNpZGViYXIoKSB7XG4gIGNvbnN0IHNpZGViYXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBzaWRlYmFyLmlkID0gXCJzaWRlYmFyXCI7XG4gIGNvbnN0IHNpZGViYXJIb21lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgc2lkZWJhckhvbWUudGV4dENvbnRlbnQgPSBcIkhvbWVcIjtcbiAgY29uc3Qgc2lkZWJhclRvZGF5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgc2lkZWJhclRvZGF5LnRleHRDb250ZW50ID0gXCJUb2RheVwiO1xuICBjb25zdCBzaWRlYmFyV2VlayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIHNpZGViYXJXZWVrLnRleHRDb250ZW50ID0gXCJXZWVrXCI7XG5cbiAgY29uc3Qgc2lkZWJhclByb2plY3RzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgc2lkZWJhclByb2plY3RzLnRleHRDb250ZW50ID0gXCJQcm9qZWN0c1wiO1xuICBzaWRlYmFyUHJvamVjdHMuaWQgPSBcInNpZGViYXItcHJvamVjdHNcIjtcblxuICBzaWRlYmFyUHJvamVjdHMuYXBwZW5kKGNyZWF0ZUFkZFByb2plY3REaXYoKSk7XG5cbiAgc2lkZWJhci5hcHBlbmQoc2lkZWJhckhvbWUsIHNpZGViYXJUb2RheSwgc2lkZWJhcldlZWssIHNpZGViYXJQcm9qZWN0cyk7XG4gIHJldHVybiBzaWRlYmFyO1xufVxuXG5jb25zdCBoYW5kbGVBZGRQcm9qZWN0QnV0dG9uQ2xpY2sgPSAoaW5wdXRQcm9qZWN0LCBpbnB1dERpdiwgYWRkUHJvamVjdERpdikgPT4ge1xuICBjb25zdCBjdXJyZW50UHJvamVjdHMgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcIlByb2plY3RzXCIpO1xuICBjb25zdCBwcm9qZWN0TmFtZSA9IGlucHV0UHJvamVjdC52YWx1ZVxuIFxuICBpZiAoIXByb2plY3ROYW1lKSB7XG4gICAgcmV0dXJuIGFsZXJ0KGBQcm9qZWN0IG5hbWUgY2FuJ3QgYmUgZW1wdHlgKTtcbiAgfVxuICBpZiAoIWN1cnJlbnRQcm9qZWN0cykge1xuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFxuICAgICAgXCJQcm9qZWN0c1wiLFxuICAgICAgSlNPTi5zdHJpbmdpZnkoW3sgdGl0bGU6IHByb2plY3ROYW1lLCB0YXNrczogW10gfV0pXG4gICAgKTtcbiAgfSBlbHNlIHtcbiAgICBjb25zdCBjdXJyZW50UHJvamVjdHNQYXJzZWQgPSBKU09OLnBhcnNlKGN1cnJlbnRQcm9qZWN0cyk7XG4gICAgXG4gICAgY29uc3QgY2hlY2tJZkR1cGxpY2F0ZU5hbWUgPSAoKSA9PiB7XG4gICAgICBjb25zdCBjaGVja1Byb2plY3ROYW1lID0gcHJvamVjdCA9PiBwcm9qZWN0LnRpdGxlID09IHByb2plY3ROYW1lXG4gICAgICByZXR1cm4gY3VycmVudFByb2plY3RzUGFyc2VkLnNvbWUoY2hlY2tQcm9qZWN0TmFtZSlcbiAgICB9XG5cbiAgICBpZihjaGVja0lmRHVwbGljYXRlTmFtZSgpPT10cnVlKXtcbiAgICAgcmV0dXJuICBhbGVydChgUHJvamVjdCBuYW1lIGFscmVhZHkgZXhpc3QhYClcbiAgICB9XG5cbiAgICBjb25zdCBwcm9qZWN0VG9BZGQgPSB7IHRpdGxlOiBwcm9qZWN0TmFtZSwgdGFza3M6IFtdIH07XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXG4gICAgICBcIlByb2plY3RzXCIsXG4gICAgICBKU09OLnN0cmluZ2lmeShbLi4uY3VycmVudFByb2plY3RzUGFyc2VkLCBwcm9qZWN0VG9BZGRdKVxuICAgICk7XG4gIH1cbiAgZGlzcGxheVByb2plY3ROYW1lc0luU2lkZWJhcigpO1xuICBkaXNQbGF5UHJvamVjdFRpdGxlSW5NYWluQ29udGVudChwcm9qZWN0TmFtZSlcbiAgZGlzcGxheVRhc2tzSW5Qcm9qZWN0KHByb2plY3ROYW1lKVxuICBpbnB1dERpdi5yZXBsYWNlV2l0aChhZGRQcm9qZWN0RGl2KTtcbn07XG5cbmNvbnN0IGhhbmRsZUNhbmNlbENsaWNrID0gKGlucHV0RGl2LCBhZGRQcm9qZWN0RGl2KSA9PiB7XG4gIGlucHV0RGl2LnJlcGxhY2VXaXRoKGFkZFByb2plY3REaXYpO1xufTtcblxuY29uc3QgaGFuZGxlQWRkUHJvamVjdERpdkNsaWNrID0gKGUsIGFkZFByb2plY3REaXYpID0+IHtcbiAgY29uc3QgaW5wdXREaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBpbnB1dERpdi5pZCA9IFwiYWRkLXByb2plY3QtaW5wdXRcIjtcbiAgY29uc3QgaW5wdXRQcm9qZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xuICBpbnB1dFByb2plY3QuaWQgPSBcImlucHV0LXByb2plY3QtbmFtZVwiO1xuICBjb25zdCBhZGQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuXG4gIGFkZC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT5cbiAgICBoYW5kbGVBZGRQcm9qZWN0QnV0dG9uQ2xpY2soaW5wdXRQcm9qZWN0LCBpbnB1dERpdiwgYWRkUHJvamVjdERpdilcbiAgKTtcblxuICBhZGQudGV4dENvbnRlbnQgPSBcImFkZFwiO1xuICBjb25zdCBjYW5jZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICBjYW5jZWwudGV4dENvbnRlbnQgPSBcImNhbmNlbFwiO1xuICBjYW5jZWwuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+XG4gICAgaGFuZGxlQ2FuY2VsQ2xpY2soaW5wdXREaXYsIGFkZFByb2plY3REaXYpXG4gICk7XG4gIGlucHV0RGl2LnRleHRDb250ZW50ID0gXCJQcm9qZWN0IE5hbWU6XCI7XG4gIGlucHV0RGl2LmFwcGVuZChpbnB1dFByb2plY3QsIGFkZCwgY2FuY2VsKTtcbiAgZS50YXJnZXQucmVwbGFjZVdpdGgoaW5wdXREaXYpO1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUFkZFByb2plY3REaXYoKSB7XG4gIGNvbnN0IGFkZFByb2plY3REaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBhZGRQcm9qZWN0RGl2LnRleHRDb250ZW50ID0gXCJBZGQgUHJvamVjdFwiO1xuICBhZGRQcm9qZWN0RGl2LmlkID0gXCJhZGQtcHJvamVjdFwiO1xuICBhZGRQcm9qZWN0RGl2LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT5cbiAgICBoYW5kbGVBZGRQcm9qZWN0RGl2Q2xpY2soZSwgYWRkUHJvamVjdERpdilcbiAgKTtcbiAgcmV0dXJuIGFkZFByb2plY3REaXY7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVBZGR0YXNrRGl2KCkge1xuICBjb25zdCBhZGRUYXNrRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgYWRkVGFza0Rpdi50ZXh0Q29udGVudCA9IFwiQWRkIGEgVGFza1wiO1xuICBhZGRUYXNrRGl2LmNsYXNzTGlzdC5hZGQoXCJhZGQtdGFza1wiKTtcbiAgYWRkVGFza0Rpdi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGFza0Zvcm0pO1xuICByZXR1cm4gYWRkVGFza0Rpdjtcbn1cblxuZnVuY3Rpb24gY3JlYXRlTWFpbkNvbnRlbnQoKSB7XG4gIGNvbnN0IG1haW5Db250ZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgbWFpbkNvbnRlbnQuaWQgPSBcIm1haW4tY29udGVudFwiO1xuICBtYWluQ29udGVudC5yZXBsYWNlQ2hpbGRyZW4oKTtcbiAgcmV0dXJuIG1haW5Db250ZW50O1xufVxuXG5mdW5jdGlvbiBjcmVhdGVGb290ZXIoKSB7XG4gIGNvbnN0IGZvb3RlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJmb290ZXJcIik7XG4gIGZvb3Rlci50ZXh0Q29udGVudCA9IFwiY29weXJpZ2h0IDIwMjNcIjtcbiAgcmV0dXJuIGZvb3Rlcjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdGVtcGxhdGUoKSB7XG4gIGRvY3VtZW50LmJvZHkucmVwbGFjZUNoaWxkcmVuKCk7XG4gIGNvbnN0IGJvZHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiYm9keVwiKTtcbiAgY29uc3QgbWFpbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJtYWluXCIpO1xuICBtYWluLmFwcGVuZChjcmVhdGVTaWRlYmFyKCksIGNyZWF0ZU1haW5Db250ZW50KCkpO1xuICBib2R5LmFwcGVuZChjcmVhdGVIZWFkZXIoKSwgbWFpbiwgY3JlYXRlRm9vdGVyKCkpO1xuICBkaXNwbGF5VGFza3MoKTtcblxuICByZXR1cm4gYm9keTtcbn1cbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9sYXlvdXQuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9sYXlvdXQuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2hhbmRsZUFkZFRhc2suY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9oYW5kbGVBZGRUYXNrLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi90YXNrQ29tcGxldGVQb3B1cC5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3Rhc2tDb21wbGV0ZVBvcHVwLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCB0ZW1wbGF0ZSBmcm9tIFwiLi9tb2R1bGVzL2xheW91dFwiO1xuaW1wb3J0IFwiLi9hc3NldHMvY3NzL2xheW91dC5jc3NcIjtcbmltcG9ydCBcIi4vYXNzZXRzL2Nzcy9oYW5kbGVBZGRUYXNrLmNzc1wiO1xuaW1wb3J0ICcuL2Fzc2V0cy9jc3MvdGFza0NvbXBsZXRlUG9wdXAuY3NzJ1xuaW1wb3J0IGRpc3BsYXlUYXNrcyBmcm9tIFwiLi9tb2R1bGVzL2Rpc3BsYXlUYXNrc1wiO1xuaW1wb3J0IHsgZGlzcGxheVByb2plY3ROYW1lc0luU2lkZWJhciB9IGZyb20gXCIuL21vZHVsZXMvZGlzcGxheVByb2plY3RcIjtcblxuXG50ZW1wbGF0ZSgpXG5kaXNwbGF5VGFza3MoKVxuZGlzcGxheVByb2plY3ROYW1lc0luU2lkZWJhcigpIl0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJuYyIsInRhc2tDb21wbGV0ZWQiLCJwb3BVcERpdiIsInRleHRDb250ZW50Iiwic3BhbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJjb25zb2xlIiwibG9nIiwicGFyc2UiLCJ0YXNrVG9SZXN0b3JlIiwibG9jYWxTdG9yYWdlIiwic2V0SXRlbSIsInRpdGxlIiwiZGlzcGxheVRhc2tzIiwiaGFuZGxlVW5kbyIsImFwcGVuZCIsInNldFRpbWVvdXQiLCJib2R5IiwibWFpbkNvbnRlbnQiLCJ0YXNrcyIsInJlcGxhY2VDaGlsZHJlbiIsImNyZWF0ZUFuZFNvcnRUYXNrQXJyYXkiLCJjcmVhdGVEaXZzUGVyVGFzayIsImNyZWF0ZUFkZHRhc2tEaXYiLCJ0YXNrIiwiZ2V0SXRlbSIsInNvcnQiLCJiIiwiZGF0ZUFkZGVkIiwidGFza0RpdiIsImNyZWF0ZVRhc2tEaXYiLCJ0YXNrTmFtZURpdiIsInRhc2tEZXRhaWxzRGl2IiwiZHVlRGF0ZURpdiIsInByaW9yaXR5RGl2IiwiY2hlY2tCb3giLCJ0eXBlIiwicGFyZW50RWxlbWVudCIsInJlbW92ZUl0ZW0iLCJoYW5kbGVDaGVja2JveENsaWNrIiwiaW5uZXJIVE1MIiwiZGVzY3JpcHRpb24iLCJkdWVEYXRlIiwicHJpb3JpdHkiLCJjcmVhdGVUYXNrRm9ybSIsImFkZFRhc2tEaXYiLCJ0YXNrRm9ybSIsImNyZWF0ZVRhc2tuYW1lRmllbGQiLCJjcmVhdGVEZXNjcmlwdGlvbkZpZWxkIiwiY3JlYXRlRGVhZGxpbmVGaWVsZCIsImNyZWF0ZVByaW9yaXR5RmllbGQiLCJjcmVhdGVTdWJtaXRCdXR0b24iLCJjcmVhdGVDYW5jZWxCdXR0b24iLCJyZXBsYWNlV2l0aCIsInRhc2tOYW1lIiwidGFza0Rlc2NyaXB0aW9uIiwiZGF0ZSIsInZhbHVlIiwiaGFuZGxlRGF0ZUNoYW5nZSIsImxvdyIsIm1lZGl1bSIsImhpZ2giLCJoYW5kbGVQcmlvcml0eUNsaWNrIiwiY2xhc3NMaXN0IiwiaW5uZXJUZXh0IiwiYWRkIiwiaGFuZGxlU3VibWl0IiwiZHVlRGF0ZVRleHQiLCJwcmlvcml0eVRleHQiLCJhbGVydCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsIm5ld1Rhc2siLCJzdWJtaXQiLCJjYW5jZWwiLCJuZXdBZGRUYXNrRGl2IiwiaW5kZXhPZkNvbXBsZXRlZFRhc2siLCJzZWxlY3RlZFByb2plY3QiLCJwcm9qZWN0cyIsImluZGV4b2ZTZWxlY3RlZFByb2plY3QiLCJmaW5kSW5kZXgiLCJwcm9qZWN0IiwiZGlzcGxheVRhc2tzSW5Qcm9qZWN0IiwicHJvamVjdFRpdGxlIiwidGFza0NvbXBsZXRlZFRpdGxlIiwiaW5kZXhvZlNlbGVjdGVkVGFzayIsImRpdiIsImlucHV0IiwicHJvamVjdE5hbWUiLCJidXR0b24iLCJjcmVhdGVBZGRCdXR0b24iLCJhZGRCdXR0b24iLCJmaW5kSW5kZXhPZlRhc2tGcm9tUHJvamVjdCIsIm5ld1Rhc2tOYW1lIiwibmV3RGVzY3JpcHRpb24iLCJuZXdEYXRlIiwibmV3UHJpb3JpdHkiLCJmaW5kIiwiYWRkRWRpdGVkVGFza1RvUHJvamVjdCIsImhhbmRsZVN1Ym1pdEJ1dHRvbkNsaWNrIiwidGFza1RvRWRpdCIsImZpbmRUYXNrRnJvbVByb2plY3QiLCJlZGl0RmllbGRzIiwidGFrc05hbWVGaWVsZCIsImRlc2NyaXB0aW9uRmllbGQiLCJkZWFkbGluZUZpZWxkIiwicHJpb3JpdHlGaWVsZCIsImNhbmNlbEJ1dHRvbiIsImNyZWF0ZUZpZWxkcyIsImRpc1BsYXlQcm9qZWN0VGl0bGVJbk1haW5Db250ZW50IiwicHJvamVjdFRpdGxlRGl2IiwiZGlzcGxheVByb2plY3ROYW1lc0luU2lkZWJhciIsInNpZGVCYXJQcm9qZWN0c0RpdiIsInByb2plY3ROYW1lRGl2IiwiaGFuZGxlUHJvamVjdE5hbWVDbGljayIsInByb2plY3ROYW1lQ2xpY2tlZCIsImNyZWF0ZUFkZFByb2plY3REaXYiLCJhZGRUYXNrVG9Qcm9qZWN0IiwidGFza0FycmF5IiwicHJvamVjdENvbnRhaW5lciIsImNyZWF0ZVByb2plY3RUYXNrRm9ybSIsImluZGV4T2ZQcm9qZWN0TmFtZSIsIm9iamVjdCIsImluZGV4T2YiLCJzdWJtaXRCdXR0b24iLCJoYW5kbGVDYW5jZWxCdXR0b25DbGljayIsImhhbmRsZUFkZFByb2plY3REaXZDbGljayIsImFkZFByb2plY3REaXYiLCJpbnB1dERpdiIsImlucHV0UHJvamVjdCIsImN1cnJlbnRQcm9qZWN0cyIsImN1cnJlbnRQcm9qZWN0c1BhcnNlZCIsInNvbWUiLCJwcm9qZWN0VG9BZGQiLCJoYW5kbGVBZGRQcm9qZWN0QnV0dG9uQ2xpY2siLCJoYW5kbGVDYW5jZWxDbGljayIsImxvY2FscyIsIm1haW4iLCJzaWRlYmFyIiwic2lkZWJhckhvbWUiLCJzaWRlYmFyVG9kYXkiLCJzaWRlYmFyV2VlayIsInNpZGViYXJQcm9qZWN0cyIsImNyZWF0ZVNpZGViYXIiLCJjcmVhdGVNYWluQ29udGVudCIsImhlYWRlciIsImhlYWRlckRpdiIsImNyZWF0ZUhlYWRlciIsImZvb3RlciIsImNyZWF0ZUZvb3RlciIsInRlbXBsYXRlIl0sInNvdXJjZVJvb3QiOiIifQ==