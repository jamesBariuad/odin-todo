(()=>{"use strict";var t={663:(t,e,n)=>{n.d(e,{Z:()=>i});var o=n(537),r=n.n(o),a=n(645),c=n.n(a)()(r());c.push([t.id,'[contentEditable="true"]:empty:not(:focus):before {\n  content: attr(data-text);\n}\n\n.active-button{\n    background-color: red;\n}\n',"",{version:3,sources:["webpack://./src/assets/css/handleAddTask.css"],names:[],mappings:"AAAA;EACE,wBAAwB;AAC1B;;AAEA;IACI,qBAAqB;AACzB",sourcesContent:['[contentEditable="true"]:empty:not(:focus):before {\n  content: attr(data-text);\n}\n\n.active-button{\n    background-color: red;\n}\n'],sourceRoot:""}]);const i=c},158:(t,e,n)=>{n.d(e,{Z:()=>i});var o=n(537),r=n.n(o),a=n(645),c=n.n(a)()(r());c.push([t.id,'* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: serif, sans-serif;\n  background-color: whitesmoke;\n  min-height: 100vh;\n  display: grid;\n  grid-template-columns: 2fr 10fr;\n  grid-template-rows: 1fr 10fr 1fr;\n  padding-left: 2em;\n}\n\nheader {\n  grid-column: span 2;\n}\nheader > div {\n  height: 100%;\n  display: flex;\n  align-items: center;\n\n  font-size: 2.5em;\n}\n\nmain {\n  display: grid;\n  grid-template-columns: 300px 1fr;\n  grid-column: span 2;\n}\n\n#sidebar {\n  display: grid;\n  grid-auto-rows: 50px;\n  padding-top: 50px;\n  gap: 10px;\n  font-size: 1.5em;\n}\n\n#main-content {\n  padding-top: 50px;\n  font-size: 1.3em;\n}\n\ninput[type="checkbox"] #tasks,\n#main-content {\n  display: grid;\n  gap: 30px;\n  /* grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); */\n  height: 2em;\n}\n\n#tasks div,\n#main-content div {\n  width: 200px;\n  background-color: whitesmoke;\n  border-radius: 10px;\n}\n\n#pop-up {\n  font-size: 1.5em;\n}\n\n#pop-up span {\n  color: blue;\n  cursor: pointer;\n}\ninput[type="checkbox"]:before {\n  position: relative;\n  display: block;\n  width: 15px;\n  height: 15px;\n  border: 1px solid #808080;\n  content: "";\n  background: #fff;\n}\n\n.add-task {\n  border: 1px solid black;\n  width: fit-content;\n  border-radius: 5px;\n  text-align: center;\n  height: fit-content;\n}\n\n#add-project{\n    width: fit-content;\n    border: 1px solid black;\n    border-radius: 2px;\n}\n\nfooter {\n  margin-top: auto;\n}\n',"",{version:3,sources:["webpack://./src/assets/css/layout.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,8BAA8B;EAC9B,4BAA4B;EAC5B,iBAAiB;EACjB,aAAa;EACb,+BAA+B;EAC/B,gCAAgC;EAChC,iBAAiB;AACnB;;AAEA;EACE,mBAAmB;AACrB;AACA;EACE,YAAY;EACZ,aAAa;EACb,mBAAmB;;EAEnB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,gCAAgC;EAChC,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,oBAAoB;EACpB,iBAAiB;EACjB,SAAS;EACT,gBAAgB;AAClB;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;;EAEE,aAAa;EACb,SAAS;EACT,iEAAiE;EACjE,WAAW;AACb;;AAEA;;EAEE,YAAY;EACZ,4BAA4B;EAC5B,mBAAmB;AACrB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,WAAW;EACX,eAAe;AACjB;AACA;EACE,kBAAkB;EAClB,cAAc;EACd,WAAW;EACX,YAAY;EACZ,yBAAyB;EACzB,WAAW;EACX,gBAAgB;AAClB;;AAEA;EACE,uBAAuB;EACvB,kBAAkB;EAClB,kBAAkB;EAClB,kBAAkB;EAClB,mBAAmB;AACrB;;AAEA;IACI,kBAAkB;IAClB,uBAAuB;IACvB,kBAAkB;AACtB;;AAEA;EACE,gBAAgB;AAClB",sourcesContent:['* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: serif, sans-serif;\n  background-color: whitesmoke;\n  min-height: 100vh;\n  display: grid;\n  grid-template-columns: 2fr 10fr;\n  grid-template-rows: 1fr 10fr 1fr;\n  padding-left: 2em;\n}\n\nheader {\n  grid-column: span 2;\n}\nheader > div {\n  height: 100%;\n  display: flex;\n  align-items: center;\n\n  font-size: 2.5em;\n}\n\nmain {\n  display: grid;\n  grid-template-columns: 300px 1fr;\n  grid-column: span 2;\n}\n\n#sidebar {\n  display: grid;\n  grid-auto-rows: 50px;\n  padding-top: 50px;\n  gap: 10px;\n  font-size: 1.5em;\n}\n\n#main-content {\n  padding-top: 50px;\n  font-size: 1.3em;\n}\n\ninput[type="checkbox"] #tasks,\n#main-content {\n  display: grid;\n  gap: 30px;\n  /* grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); */\n  height: 2em;\n}\n\n#tasks div,\n#main-content div {\n  width: 200px;\n  background-color: whitesmoke;\n  border-radius: 10px;\n}\n\n#pop-up {\n  font-size: 1.5em;\n}\n\n#pop-up span {\n  color: blue;\n  cursor: pointer;\n}\ninput[type="checkbox"]:before {\n  position: relative;\n  display: block;\n  width: 15px;\n  height: 15px;\n  border: 1px solid #808080;\n  content: "";\n  background: #fff;\n}\n\n.add-task {\n  border: 1px solid black;\n  width: fit-content;\n  border-radius: 5px;\n  text-align: center;\n  height: fit-content;\n}\n\n#add-project{\n    width: fit-content;\n    border: 1px solid black;\n    border-radius: 2px;\n}\n\nfooter {\n  margin-top: auto;\n}\n'],sourceRoot:""}]);const i=c},209:(t,e,n)=>{n.d(e,{Z:()=>i});var o=n(537),r=n.n(o),a=n(645),c=n.n(a)()(r());c.push([t.id,"#pop-up {\n    position: absolute;\n    bottom: 5em;\n    left: 2em;\n}","",{version:3,sources:["webpack://./src/assets/css/taskCompletePopup.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,WAAW;IACX,SAAS;AACb",sourcesContent:["#pop-up {\n    position: absolute;\n    bottom: 5em;\n    left: 2em;\n}"],sourceRoot:""}]);const i=c},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",o=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),o&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),o&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,o,r,a){"string"==typeof t&&(t=[[null,t,void 0]]);var c={};if(o)for(var i=0;i<this.length;i++){var d=this[i][0];null!=d&&(c[d]=!0)}for(var s=0;s<t.length;s++){var l=[].concat(t[s]);o&&c[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,o=0;o<e.length;o++)if(e[o].identifier===t){n=o;break}return n}function o(t,o){for(var a={},c=[],i=0;i<t.length;i++){var d=t[i],s=o.base?d[0]+o.base:d[0],l=a[s]||0,u="".concat(s," ").concat(l);a[s]=l+1;var m=n(u),p={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==m)e[m].references++,e[m].updater(p);else{var A=r(p,o);o.byIndex=i,e.splice(i,0,{identifier:u,updater:A,references:1})}c.push(u)}return c}function r(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,r){var a=o(t=t||[],r=r||{});return function(t){t=t||[];for(var c=0;c<a.length;c++){var i=n(a[c]);e[i].references--}for(var d=o(t,r),s=0;s<a.length;s++){var l=n(a[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=d}}},569:t=>{var e={};t.exports=function(t,n){var o=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return t[o](a,a.exports,n),a.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0,(()=>{const t=(t,e,n,o,r)=>({title:t,description:e,dueDate:n,priority:o,dateAdded:r});function e(){const t=document.querySelector(".add-task"),e=document.createElement("div");return e.id="task-form",e.append(o(),r(),a(),c(),d(),s()),t.replaceWith(e),t}const o=()=>{const t=document.createElement("div");return t.setAttribute("contentEditable","true"),t.setAttribute("data-text","Task Name"),t},r=()=>{const t=document.createElement("div");return t.setAttribute("contentEditable","true"),t.setAttribute("data-text","Task Description"),t},a=()=>{let t="";const e=document.createElement("div");e.textContent="Due Date:";const n=document.createElement("input");return n.setAttribute("type","date"),n.addEventListener("change",(e=>(e=>{t=e.target.value})(e))),e.append(n),e},c=()=>{const t=document.createElement("div");t.textContent="Priority:";const e=document.createElement("button"),n=document.createElement("button"),o=document.createElement("button");e.textContent="low",n.textContent="medium",o.textContent="high";const r=t=>{let r="";return e.classList.remove("active-button"),n.classList.remove("active-button"),o.classList.remove("active-button"),"low"==t.target.innerText?e.classList.add("active-button"):"medium"==t.target.innerText?n.classList.add("active-button"):o.classList.add("active-button"),r=t.target.innerText,r};return e.addEventListener("click",(t=>r(t))),n.addEventListener("click",(t=>r(t))),o.addEventListener("click",(t=>r(t))),t.append(e,n,o),t},i=()=>{const e=document.querySelector("#main-content"),n=document.querySelector('[data-text="Task Name"]'),o=document.querySelector('[data-text="Task Description"]'),r=document.querySelector('input[type="date"]'),a=document.querySelector('button[class="active-button"]');let c="",i="";if(!n.innerHTML)return alert("please fill Task Name field");if(c=r.value?r.value:"no due date",i=a?a.innerHTML:"no priority set",null!==localStorage.getItem(`${n.innerHTML}`))return alert(`Task ${n.innerHTML} already exist!`);const d=(new Date).toISOString(),s=t(`${n.textContent}`,`${o.textContent}`,`${c}`,`${i}`,d);localStorage.setItem(`${n.textContent}`,JSON.stringify(s)),e.replaceChildren(),Z()},d=()=>{const t=document.createElement("button");return t.textContent="add",t.addEventListener("click",i),t},s=()=>{const t=document.createElement("button");return t.textContent="cancel",t.addEventListener("click",(()=>{const t=ot();document.querySelector("#task-form").replaceWith(t)})),t},l=(t,e)=>{document.querySelector("main-content");const n=document.createElement("div");n.id="pop-up",n.textContent="1 task completed!   ";const o=document.createElement("span");o.textContent="undo",o.addEventListener("click",(()=>((t,e,n)=>{const o=document.querySelector("#project-title").textContent,r=JSON.parse(localStorage.getItem("Projects")),a=r.findIndex((t=>t.title==o));r[a].tasks.splice(n,0,t),localStorage.setItem("Projects",JSON.stringify(r)),e.remove(),E(o)})(t,n,e))),n.append(o),setTimeout((()=>{n.remove()}),2e3),document.body.append(n)},u=()=>{const t=document.createElement("input");return t.type="checkbox",t.addEventListener("click",(t=>(t=>{const e=document.querySelector("#project-title").textContent,n=t.target.parentElement.id,o=JSON.parse(localStorage.getItem("Projects")),r=o.findIndex((t=>t.title==e)),a=o[r],c=a.tasks.findIndex((t=>t.title==n)),i=a.tasks[c];a.tasks.splice(c,1),localStorage.setItem("Projects",JSON.stringify(o)),E(e),l(i,c)})(t))),t},m=t=>{const e=document.querySelector("#main-content"),n=document.createElement("div");return n.id="project-title",n.textContent=t,e.replaceChildren(),e.append(n),e},p=()=>{const t=document.querySelector("#sidebar-projects"),e=JSON.parse(localStorage.getItem("Projects"));if(e){t.replaceChildren(),t.textContent="Projects";for(let n=0;n<e.length;n++){const o=document.createElement("div");o.textContent=e[n].title,t.append(o),o.addEventListener("click",(t=>{return e=t.target.textContent,m(e),void E(e);var e}))}t.append(nt())}},A=()=>{const e=document.querySelector("#project-title"),n=document.querySelector('[data-text="Task Name"]'),o=document.querySelector('[data-text="Task Description"]'),r=document.querySelector('input[type="date"]'),a=document.querySelector('button[class="active-button"]');let c="",i="";c=r.value?r.value:"no due date",i=a?a.innerHTML:"no priority set";const d=(new Date).toISOString(),s=t(`${n.textContent}`,`${o.textContent}`,`${c}`,`${i}`,d);g(s),E(e.textContent)},g=t=>{const e=JSON.parse(localStorage.getItem("Projects")),n=document.querySelector("#project-title").textContent,o=e.findIndex((t=>t.title==n)),r=e[o].tasks;r.push(t),e[o].tasks=r,localStorage.setItem("Projects",JSON.stringify(e))},E=t=>{const e=document.querySelector("#main-content");e.replaceChildren(),m(t);const n=document.createElement("div"),o=JSON.parse(localStorage.getItem("Projects"));if(!o)return console.log(o,f()),e.append(f());const r=o.map((t=>t.title)).indexOf(t),a=o[r];for(let t=0;t<a.tasks.length;t++)n.append(v(a.tasks[t]));e.append(n,f())},v=t=>{const e=document.createElement("div");e.id=t.title;const n=document.createElement("div"),o=document.createElement("div"),r=document.createElement("div"),a=document.createElement("div"),c=u();return n.innerHTML=`Task:${t.title}`,o.innerHTML=`details:${t.description}`,r.textContent=`Due date:${t.dueDate}`,a.textContent=`Priority:${t.priority}`,e.addEventListener("click",(t=>k(t))),e.append(c,n,o,r,a),e},f=()=>{const t=document.createElement("div");t.textContent="Add a task",t.id="add-task";const e=document.createElement("div");return e.id="task-form",t.addEventListener("click",(()=>t.replaceWith(e))),e.append(o(),r(),a(),c(),(()=>{const t=document.createElement("button");return t.type="button",t.textContent="Add",t.addEventListener("click",A),t})(),((t,e)=>{const n=document.createElement("button");n.type="button",n.textContent="cancel",n.addEventListener("click",(()=>o(t,e)));const o=(t,e)=>{e.replaceWith(t)};return n})(t,e)),t},C=t=>{const e=document.createElement("div"),n=document.createElement("input");return n.type="date",n.value=t.dueDate,e.textContent="Due date:",e.append(n),e},x=t=>{const e=document.createElement("div");e.textContent="Priority:";const n=document.createElement("button"),o=document.createElement("button"),r=document.createElement("button");n.textContent="low",o.textContent="medium",r.textContent="high";const a=t=>{let e="";return n.classList.remove("active-button"),o.classList.remove("active-button"),r.classList.remove("active-button"),"low"==t.target.innerText?n.classList.add("active-button"):"medium"==t.target.innerText?o.classList.add("active-button"):"high"==t.target.innerText&&r.classList.add("active-button"),e=t.target.innerText,e};return n.addEventListener("click",(t=>a(t))),o.addEventListener("click",(t=>a(t))),r.addEventListener("click",(t=>a(t))),e.append(n,o,r),null==t||("low"==t.priority?n.classList.add("active-button"):"medium"==t.priority?o.classList.add("active-button"):"high"==t.priority&&r.classList.add("active-button")),e},y=()=>{const t=document.querySelector("#project-title").textContent,e=document.createElement("button");return e.type="button",e.addEventListener("click",(()=>E(t))),e.textContent="Cancel",e},b=t=>{const e=document.createElement("button");e.type="button",e.textContent="Submit";const n=S(t.title);return e.addEventListener("click",(()=>((t,e)=>{const n=document.querySelector("#project-title").textContent,o=document.querySelector('[data-text="Task Name"]').textContent,r=document.querySelector('[data-text="Task Description"]').textContent,a=document.querySelector('input[type="date"]').value,c=document.querySelector(".active-button");if(t.title=o,t.description=r,!o)return E(n),alert("Input a task name");t.dueDate?t.dueDate=a:t.dueDate="no due date",t.priority=c?c.textContent:"no priority set",((t,e)=>{const n=JSON.parse(localStorage.getItem("Projects")),o=document.querySelector("#project-title").textContent;n.find((t=>t.title==o)).tasks[e]=t,localStorage.setItem("Projects",JSON.stringify(n))})(t,e),E(n)})(t,n))),e},S=t=>{const e=JSON.parse(localStorage.getItem("Projects")),n=document.querySelector("#project-title").textContent;return e.find((t=>t.title==n)).tasks.findIndex((e=>e.title==t))},k=t=>{const e=t.target.parentElement.id.toString(),n=document.querySelector(`[id='${e}']`);if(!n)return;if(""==e)return;const a=(t=>{const e=JSON.parse(localStorage.getItem("Projects")),n=document.querySelector("#project-title").textContent;return e.find((t=>t.title==n)).tasks.find((e=>e.title===t))})(e);n.replaceWith((t=>{const e=document.createElement("div"),n=o(),a=r(),c=C(t),i=x(t),d=y(),s=b(t);return n.textContent=t.title,a.textContent=t.description,e.append(n,a,c,i,d,s),e})(a))},h=()=>{Z([])},B=()=>{const t=(new Date).toISOString(),e=[],n=[];for(let o=0;o<localStorage.length;o++){if("Projects"==localStorage.key(o))continue;const r=JSON.parse(localStorage.getItem(localStorage.key(o)));new Date(r.dueDate).toDateString()!=(new Date).toDateString()&&"no due date"!=r.dueDate?t>new Date(r.dueDate).toISOString()&&e.push(r):n.push(r)}I(e,n,"today")},L=()=>{const t=(new Date).toISOString(),e=[],n=[];for(let a=0;a<localStorage.length;a++){const c=localStorage.key(a),i=JSON.parse(localStorage.getItem(c));if("Projects"===c)continue;if("no due date"===i.dueDate){n.push(i);continue}const d=new Date(i.dueDate).toISOString();o=t,r=d,Math.abs(new Date(r)-new Date(o))/864e5<7&&new Date(o).getUTCDay()<=new Date(r).getUTCDay()?n.push(i):t>d&&new Date(d).toDateString()!==(new Date).toDateString()&&e.push(i)}var o,r;T(e,n,"week")},T=(t,e,n)=>{const o=document.querySelector("#main-content");o.replaceChildren();const r=document.createElement("div");0==t.length?r.textContent="":r.textContent="OverDue";const a=document.createElement("div");0==e.length&&0==t.length?a.textContent="No tasks for this week":a.textContent="This Week";const c=document.createElement("div");c.id="content",D(t,r,n),D(e,a,n),c.append(r,a),o.append(c,N(n))},I=(t,e,n)=>{const o=document.querySelector("#main-content");o.replaceChildren();const r=document.createElement("div");0==t.length?r.textContent="":r.textContent="OverDue";const a=document.createElement("div");0==e.length&&0==t.length?a.textContent="No tasks for today":a.textContent="Today";const c=document.createElement("div");c.id="content",D(t,r,n),D(e,a,n),c.append(r,a),o.append(c,N(n))},D=(t,e,n)=>{for(let o=0;o<t.length;o++){const r=w(t[o],n);e.append(r)}return e},w=(t,e)=>{const n=document.createElement("div");n.id=t.title,n.addEventListener("click",(t=>j(t,e)));const o=document.createElement("div"),r=document.createElement("div"),a=document.createElement("div"),c=document.createElement("div"),i=document.createElement("input");return i.type="checkbox",i.addEventListener("click",(t=>((t,e)=>{const n=document.querySelector("#main-content"),o=localStorage.getItem(t.target.parentElement.id);localStorage.removeItem(t.target.parentElement.id),M(o,e),n.replaceChildren(),"today"==e?B():"week"==e&&L()})(t,e))),o.innerHTML=`Task:${t.title}`,r.innerHTML=`details:${t.description}`,a.textContent=`Due date:${t.dueDate}`,c.textContent=`Priority:${t.priority}`,n.append(i,o,r,a,c),n},j=(t,e)=>{const n=t.target.parentElement.id,o=JSON.parse(localStorage.getItem(n));if(!o)return;const r=t.target.parentElement,a=q(o,e);r.replaceWith(a)},q=(t,e)=>{const n=document.createElement("div"),c=o(t);c.textContent=t?.title;const i=r(t);i.textContent=t?.description;const d=a(t);d.querySelector("input").value=t?.dueDate;const s=x(t),l=O(e),u=P(t,e);return n.append(c,i,d,s,l,u),n},N=t=>{const e=document.createElement("div");return e.textContent="Add a Task",e.classList.add("add-task"),e.addEventListener("click",(()=>((t,e)=>{const n=document.createElement("div"),c=o(),i=r(),d=a(),s=x(),l=O(e),u=P(null,e);return n.append(c,i,d,s,l,u),t.replaceWith(n),t})(e,t))),e},O=t=>{const e=document.createElement("button");return e.type="button",e.textContent="Cancel",e.addEventListener("click",(()=>"today"==t?B():"week"==t?L():void 0)),e},P=(t,e)=>{const n=document.createElement("button");return n.type="button",n.textContent="Submit",n.addEventListener("click",(()=>J(t,e))),n},J=(t,e)=>{if(!t)return $(e);const n=t.title,o=document.querySelector('[data-text="Task Name"]').textContent,r=document.querySelector('[data-text="Task Description"]').textContent,a=document.querySelector('input[type="date"]').value,c=document.querySelector(".active-button");return t.title=o,t.description=r,t.title?(t.dueDate=a||"no due date",t.priority=c?c.textContent:"no priority set",W(t,n),"today"==e?B():"week"==e?L():void 0):alert("please fill Task Name field")},$=e=>{const n=document.querySelector('[data-text="Task Name"]').textContent,o=document.querySelector('[data-text="Task Description"]').textContent,r=document.querySelector('input[type="date"]').value,a=document.querySelector(".active-button");let c,i=r;if(!n)return alert("please fill Task Name field");i||(i="no due date"),c=a?a.textContent:"no priority set";const d=t(n,o,i,c,(new Date).toISOString);W(d),"today"==e?B():"week"==e&&L()},W=(t,e)=>{localStorage.removeItem(e),localStorage.setItem(t.title,JSON.stringify(t))},M=(t,e)=>{document.querySelector("main-content");const n=document.createElement("div");n.id="pop-up",n.textContent="1 task completed!   ";const o=document.createElement("span");o.textContent="undo",o.addEventListener("click",(()=>((t,e,n)=>{const o=JSON.parse(t);localStorage.setItem(o.title,t),n?"today"==n?B():"week"==n&&L():Z(),e.remove()})(t,n,e))),n.append(o),setTimeout((()=>{n.remove()}),2e3),document.body.append(n)};function Z(t){const e=document.querySelector("#main-content"),n=document.createElement("div");n.id="tasks",e.replaceChildren(),t||(t=[]);const o=t;return H(o),z(o,n),n.append(ot()),e.append(n),e}const H=t=>{for(let e=0;e<=localStorage.length-1;e++){const n=JSON.parse(localStorage.getItem(localStorage.key(e)));n.title&&t.push(n)}return t.sort((function(t,e){return t.dateAdded<e.dateAdded?-1:t.dateAdded>e.dateAdded?1:0})),t},z=(t,e)=>{for(let n=0;n<t.length;n++){const o=U(t[n]);e.append(o)}return e},U=t=>{const e=document.createElement("div");e.id=t.title,e.addEventListener("click",(t=>R(t)));const n=document.createElement("div"),o=document.createElement("div"),r=document.createElement("div"),a=document.createElement("div"),c=document.createElement("input");return c.type="checkbox",c.addEventListener("click",(t=>(t=>{const e=document.querySelector("#main-content"),n=localStorage.getItem(t.target.parentElement.id);localStorage.removeItem(t.target.parentElement.id),M(n),e.replaceChildren(),Z()})(t))),n.innerHTML=`Task:${t.title}`,o.innerHTML=`details:${t.description}`,r.textContent=`Due date:${t.dueDate}`,a.textContent=`Priority:${t.priority}`,e.append(c,n,o,r,a),e},R=t=>{const e=t.target.parentElement.id,n=JSON.parse(localStorage.getItem(e));if(!n)return;const o=t.target.parentElement,r=Y(n);o.replaceWith(r)},Y=t=>{const e=document.createElement("div");return e.append(X(t),F(t),_(t),V(t),K(t),G()),e},X=t=>{const e=o();return e.textContent=t.title,e},F=t=>{const e=r();return e.textContent=t.description,e},_=t=>{const e=a();return e.querySelector("input").value=t.dueDate,e},V=t=>x(t),G=()=>{const t=document.createElement("button");return t.type="button",t.textContent="Cancel",t.addEventListener("click",(()=>Z())),t},K=t=>{const e=document.createElement("button");return e.type="button",e.textContent="Submit",e.addEventListener("click",(()=>Q(t))),e},Q=t=>{const e=t.title,n=document.querySelector('[data-text="Task Name"]').textContent,o=document.querySelector('[data-text="Task Description"]').textContent,r=document.querySelector('input[type="date"]').value,a=document.querySelector(".active-button");if(t.title=n,t.description=o,!n)return displayTasksInProject(projectName),alert("Input a task name");t.dueDate?t.dueDate=r:t.dueDate="no due date",t.priority=a?a.textContent:"no priority set",tt(t,e),Z()},tt=(t,e)=>{localStorage.removeItem(e),localStorage.setItem(t.title,JSON.stringify(t))},et=(t,e)=>{const n=document.createElement("div");n.id="add-project-input";const o=document.createElement("input");o.id="input-project-name";const r=document.createElement("button");r.addEventListener("click",(()=>((t,e,n)=>{const o=localStorage.getItem("Projects"),r=t.value;if(!r)return alert("Project name can't be empty");if(o){const t=JSON.parse(o);if(1==t.some((t=>t.title==r)))return alert("Project name already exist!");const e={title:r,tasks:[]};localStorage.setItem("Projects",JSON.stringify([...t,e]))}else localStorage.setItem("Projects",JSON.stringify([{title:r,tasks:[]}]));p(),m(r),E(r),e.replaceWith(n)})(o,n,e))),r.textContent="add";const a=document.createElement("button");a.textContent="cancel",a.addEventListener("click",(()=>((t,e)=>{t.replaceWith(e)})(n,e))),n.textContent="Project Name:",n.append(o,r,a),t.target.replaceWith(n)};function nt(){const t=document.createElement("div");return t.textContent="Add Project",t.id="add-project",t.addEventListener("click",(e=>et(e,t))),t}function ot(){const t=document.createElement("div");return t.textContent="Add a Task",t.classList.add("add-task"),t.addEventListener("click",e),t}var rt=n(379),at=n.n(rt),ct=n(795),it=n.n(ct),dt=n(569),st=n.n(dt),lt=n(565),ut=n.n(lt),mt=n(216),pt=n.n(mt),At=n(589),gt=n.n(At),Et=n(158),vt={};vt.styleTagTransform=gt(),vt.setAttributes=ut(),vt.insert=st().bind(null,"head"),vt.domAPI=it(),vt.insertStyleElement=pt(),at()(Et.Z,vt),Et.Z&&Et.Z.locals&&Et.Z.locals;var ft=n(663),Ct={};Ct.styleTagTransform=gt(),Ct.setAttributes=ut(),Ct.insert=st().bind(null,"head"),Ct.domAPI=it(),Ct.insertStyleElement=pt(),at()(ft.Z,Ct),ft.Z&&ft.Z.locals&&ft.Z.locals;var xt=n(209),yt={};yt.styleTagTransform=gt(),yt.setAttributes=ut(),yt.insert=st().bind(null,"head"),yt.domAPI=it(),yt.insertStyleElement=pt(),at()(xt.Z,yt),xt.Z&&xt.Z.locals&&xt.Z.locals,function(){document.body.replaceChildren();const t=document.querySelector("body"),e=document.createElement("main");e.append(function(){const t=document.createElement("div");t.id="sidebar";const e=document.createElement("div");e.textContent="Home",e.id="sidebarHome",e.addEventListener("click",h);const n=document.createElement("div");n.textContent="Today",n.addEventListener("click",B);const o=document.createElement("div");o.textContent="Week",o.addEventListener("click",L);const r=document.createElement("div");return r.textContent="Projects",r.id="sidebar-projects",r.append(nt()),t.append(e,n,o,r),t}(),function(){const t=document.createElement("div");return t.id="main-content",t.replaceChildren(),t}()),t.append(function(){const t=document.createElement("header"),e=document.createElement("div");return e.textContent=" To-do List",t.append(e),t}(),e,function(){const t=document.createElement("footer");return t.textContent="copyright 2023",t}()),Z()}(),Z(),p()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,