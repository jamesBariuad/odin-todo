(()=>{"use strict";var t={663:(t,e,n)=>{n.d(e,{Z:()=>i});var o=n(537),r=n.n(o),c=n(645),a=n.n(c)()(r());a.push([t.id,'[contentEditable="true"]:empty:not(:focus):before {\n  content: attr(data-text);\n}\n\n.active-button{\n    background-color: red;\n}\n',"",{version:3,sources:["webpack://./src/assets/css/handleAddTask.css"],names:[],mappings:"AAAA;EACE,wBAAwB;AAC1B;;AAEA;IACI,qBAAqB;AACzB",sourcesContent:['[contentEditable="true"]:empty:not(:focus):before {\n  content: attr(data-text);\n}\n\n.active-button{\n    background-color: red;\n}\n'],sourceRoot:""}]);const i=a},158:(t,e,n)=>{n.d(e,{Z:()=>i});var o=n(537),r=n.n(o),c=n(645),a=n.n(c)()(r());a.push([t.id,"*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody{\n    background-color: green;\n    min-height: 100vh;\n    display: grid;\n    grid-template-columns: 2fr 10fr;\n    grid-template-rows: 1fr 10fr 1fr;\n}\n\nheader{\n    grid-column: span 2;\n}\n\nmain{\n    display: grid;\n    grid-template-columns: 300px  1fr;\n    grid-column: span 2;\n}\n\n#sidebar{\n display: grid;\n grid-auto-rows: 50px;\n\n /* gap: 10px; */\n}\n\nfooter{\n    margin-top: auto;\n}","",{version:3,sources:["webpack://./src/assets/css/layout.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,uBAAuB;IACvB,iBAAiB;IACjB,aAAa;IACb,+BAA+B;IAC/B,gCAAgC;AACpC;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,iCAAiC;IACjC,mBAAmB;AACvB;;AAEA;CACC,aAAa;CACb,oBAAoB;;CAEpB,eAAe;AAChB;;AAEA;IACI,gBAAgB;AACpB",sourcesContent:["*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody{\n    background-color: green;\n    min-height: 100vh;\n    display: grid;\n    grid-template-columns: 2fr 10fr;\n    grid-template-rows: 1fr 10fr 1fr;\n}\n\nheader{\n    grid-column: span 2;\n}\n\nmain{\n    display: grid;\n    grid-template-columns: 300px  1fr;\n    grid-column: span 2;\n}\n\n#sidebar{\n display: grid;\n grid-auto-rows: 50px;\n\n /* gap: 10px; */\n}\n\nfooter{\n    margin-top: auto;\n}"],sourceRoot:""}]);const i=a},209:(t,e,n)=>{n.d(e,{Z:()=>i});var o=n(537),r=n.n(o),c=n(645),a=n.n(c)()(r());a.push([t.id,"#pop-up {\n    position: absolute;\n    bottom: 5em;\n    left: 2em;\n}","",{version:3,sources:["webpack://./src/assets/css/taskCompletePopup.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,WAAW;IACX,SAAS;AACb",sourcesContent:["#pop-up {\n    position: absolute;\n    bottom: 5em;\n    left: 2em;\n}"],sourceRoot:""}]);const i=a},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",o=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),o&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),o&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,o,r,c){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(o)for(var i=0;i<this.length;i++){var d=this[i][0];null!=d&&(a[d]=!0)}for(var s=0;s<t.length;s++){var u=[].concat(t[s]);o&&a[u[0]]||(void 0!==c&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=c),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),r&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=r):u[4]="".concat(r)),e.push(u))}},e}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),c="/*# ".concat(r," */");return[e].concat([c]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,o=0;o<e.length;o++)if(e[o].identifier===t){n=o;break}return n}function o(t,o){for(var c={},a=[],i=0;i<t.length;i++){var d=t[i],s=o.base?d[0]+o.base:d[0],u=c[s]||0,l="".concat(s," ").concat(u);c[s]=u+1;var m=n(l),p={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==m)e[m].references++,e[m].updater(p);else{var v=r(p,o);o.byIndex=i,e.splice(i,0,{identifier:l,updater:v,references:1})}a.push(l)}return a}function r(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,r){var c=o(t=t||[],r=r||{});return function(t){t=t||[];for(var a=0;a<c.length;a++){var i=n(c[a]);e[i].references--}for(var d=o(t,r),s=0;s<c.length;s++){var u=n(c[s]);0===e[u].references&&(e[u].updater(),e.splice(u,1))}c=d}}},569:t=>{var e={};t.exports=function(t,n){var o=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var c=n.sourceMap;c&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(c))))," */")),e.styleTagTransform(o,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(o){var r=e[o];if(void 0!==r)return r.exports;var c=e[o]={id:o,exports:{}};return t[o](c,c.exports,n),c.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0,(()=>{const t=t=>{document.querySelector("main-content");const e=document.createElement("div");e.id="pop-up",e.textContent="1 task completed!   ";const n=document.createElement("span");n.textContent="undo",n.addEventListener("click",(()=>((t,e)=>{const n=JSON.parse(t);localStorage.setItem(n.title,t),I(),e.remove()})(t,e))),e.append(n),setTimeout((()=>{e.remove()}),2e3),document.body.append(e)},e=(t,e,n,o,r)=>({title:t,description:e,dueDate:n,priority:o,dateAdded:r});function o(){const t=document.querySelector(".add-task"),e=document.createElement("div");return e.id="task-form",e.append(r(),c(),a(),i(),s(),u()),t.replaceWith(e),t}const r=()=>{const t=document.createElement("div");return t.setAttribute("contentEditable","true"),t.setAttribute("data-text","Task Name"),t},c=()=>{const t=document.createElement("div");return t.setAttribute("contentEditable","true"),t.setAttribute("data-text","Task Description"),t},a=()=>{let t="";const e=document.createElement("div");e.textContent="Due Date:";const n=document.createElement("input");return n.setAttribute("type","date"),n.addEventListener("change",(e=>(e=>{t=e.target.value})(e))),e.append(n),e},i=()=>{const t=document.createElement("div");t.textContent="Priority:";const e=document.createElement("button"),n=document.createElement("button"),o=document.createElement("button");e.textContent="low",n.textContent="medium",o.textContent="high";const r=t=>{let r="";return e.classList.remove("active-button"),n.classList.remove("active-button"),o.classList.remove("active-button"),"low"==t.target.innerText?e.classList.add("active-button"):"medium"==t.target.innerText?n.classList.add("active-button"):o.classList.add("active-button"),r=t.target.innerText,r};return e.addEventListener("click",(t=>r(t))),n.addEventListener("click",(t=>r(t))),o.addEventListener("click",(t=>r(t))),t.append(e,n,o),t},d=()=>{const t=document.querySelector("#main-content"),n=document.querySelector('[data-text="Task Name"]'),o=document.querySelector('[data-text="Task Description"]'),r=document.querySelector('input[type="date"]'),c=document.querySelector('button[class="active-button"]');let a="",i="";if(!n.innerHTML)return alert("please fill Task Name field");if(a=r.value?r.value:"no due date",i=c?c.innerHTML:"no priority set",null!==localStorage.getItem(`${n.innerHTML}`))return alert(`Task ${n.innerHTML} already exist!`);const d=(new Date).toISOString(),s=e(`${n.textContent}`,`${o.textContent}`,`${a}`,`${i}`,d);localStorage.setItem(`${n.textContent}`,JSON.stringify(s)),t.replaceChildren(),I()},s=()=>{const t=document.createElement("button");return t.textContent="add",t.addEventListener("click",d),t},u=()=>{const t=document.createElement("button");return t.textContent="cancel",t.addEventListener("click",(()=>{const t=R();document.querySelector("#task-form").replaceWith(t)})),t},l=(t,e)=>{document.querySelector("main-content");const n=document.createElement("div");n.id="pop-up",n.textContent="1 task completed!   ";const o=document.createElement("span");o.textContent="undo",o.addEventListener("click",(()=>((t,e,n)=>{const o=document.querySelector("#project-title").textContent,r=JSON.parse(localStorage.getItem("Projects")),c=r.findIndex((t=>t.title==o));r[c].tasks.splice(n,0,t),localStorage.setItem("Projects",JSON.stringify(r)),e.remove(),A(o)})(t,n,e))),n.append(o),setTimeout((()=>{n.remove()}),2e3),document.body.append(n)},m=()=>{const t=document.createElement("input");return t.type="checkbox",t.addEventListener("click",(t=>(t=>{const e=document.querySelector("#project-title").textContent,n=t.target.parentElement.id,o=JSON.parse(localStorage.getItem("Projects")),r=o.findIndex((t=>t.title==e)),c=o[r],a=c.tasks.findIndex((t=>t.title==n)),i=c.tasks[a];c.tasks.splice(a,1),localStorage.setItem("Projects",JSON.stringify(o)),A(e),l(i,a)})(t))),t},p=t=>{const e=document.querySelector("#main-content"),n=document.createElement("div");return n.id="project-title",n.textContent=t,e.replaceChildren(),e.append(n),e},v=()=>{const t=document.querySelector("#sidebar-projects"),e=JSON.parse(localStorage.getItem("Projects"));if(e){t.replaceChildren(),t.textContent="Projects";for(let n=0;n<e.length;n++){const o=document.createElement("div");o.textContent=e[n].title,t.append(o),o.addEventListener("click",(t=>{return e=t.target.textContent,p(e),void A(e);var e}))}t.append(W())}},f=()=>{const t=document.querySelector("#project-title"),n=document.querySelector('[data-text="Task Name"]'),o=document.querySelector('[data-text="Task Description"]'),r=document.querySelector('input[type="date"]'),c=document.querySelector('button[class="active-button"]');let a="",i="";a=r.value?r.value:"no due date",i=c?c.innerHTML:"no priority set";const d=(new Date).toISOString(),s=e(`${n.textContent}`,`${o.textContent}`,`${a}`,`${i}`,d);g(s),A(t.textContent)},g=t=>{const e=JSON.parse(localStorage.getItem("Projects")),n=document.querySelector("#project-title").textContent,o=e.findIndex((t=>t.title==n)),r=e[o].tasks;r.push(t),e[o].tasks=r,localStorage.setItem("Projects",JSON.stringify(e))},A=t=>{const e=document.querySelector("#main-content");e.replaceChildren(),p(t);const n=document.createElement("div"),o=JSON.parse(localStorage.getItem("Projects"));if(!o)return console.log(o,C()),e.append(C());const r=o.map((t=>t.title)).indexOf(t),c=o[r];for(let t=0;t<c.tasks.length;t++)n.append(y(c.tasks[t]));e.append(n,C())},y=t=>{const e=document.createElement("div");e.id=t.title;const n=document.createElement("div"),o=document.createElement("div"),r=document.createElement("div"),c=document.createElement("div"),a=m();return n.innerHTML=`Task:${t.title}`,o.innerHTML=`details:${t.description}`,r.textContent=`Due date:${t.dueDate}`,c.textContent=`Priority:${t.priority}`,e.addEventListener("click",(t=>k(t))),e.append(a,n,o,r,c),e},C=()=>{const t=document.createElement("div");t.textContent="Add a task",t.id="add-task";const e=document.createElement("div");return e.id="task-form",t.addEventListener("click",(()=>t.replaceWith(e))),e.append(r(),c(),a(),i(),(()=>{const t=document.createElement("button");return t.type="button",t.textContent="Add",t.addEventListener("click",f),t})(),((t,e)=>{const n=document.createElement("button");n.type="button",n.textContent="cancel",n.addEventListener("click",(()=>o(t,e)));const o=(t,e)=>{e.replaceWith(t)};return n})(t,e)),t},x=t=>{const e=document.createElement("div"),n=document.createElement("input");return n.type="date",n.value=t.dueDate,e.textContent="Due date:",e.append(n),e},b=t=>{const e=document.createElement("div");e.textContent="Priority:";const n=document.createElement("button"),o=document.createElement("button"),r=document.createElement("button");n.textContent="low",o.textContent="medium",r.textContent="high";const c=t=>{let e="";return n.classList.remove("active-button"),o.classList.remove("active-button"),r.classList.remove("active-button"),"low"==t.target.innerText?n.classList.add("active-button"):"medium"==t.target.innerText?o.classList.add("active-button"):"high"==t.target.innerText&&r.classList.add("active-button"),e=t.target.innerText,e};return"low"==t.priority?n.classList.add("active-button"):"medium"==t.priority?o.classList.add("active-button"):"high"==t.priority&&r.classList.add("active-button"),n.addEventListener("click",(t=>c(t))),o.addEventListener("click",(t=>c(t))),r.addEventListener("click",(t=>c(t))),e.append(n,o,r),e},E=()=>{const t=document.querySelector("#project-title").textContent,e=document.createElement("button");return e.type="button",e.addEventListener("click",(()=>A(t))),e.textContent="Cancel",e},S=t=>{const e=document.createElement("button");e.type="button",e.textContent="Submit";const n=h(t.title);return e.addEventListener("click",(()=>((t,e)=>{const n=document.querySelector("#project-title").textContent,o=document.querySelector('[data-text="Task Name"]').textContent,r=document.querySelector('[data-text="Task Description"]').textContent,c=document.querySelector('input[type="date"]').value,a=document.querySelector(".active-button");if(t.title=o,t.description=r,!o)return A(n),alert("Input a task name");t.dueDate?t.dueDate=c:t.dueDate="no due date",t.priority=a?a.textContent:"no priority set",((t,e)=>{const n=JSON.parse(localStorage.getItem("Projects")),o=document.querySelector("#project-title").textContent;n.find((t=>t.title==o)).tasks[e]=t,localStorage.setItem("Projects",JSON.stringify(n))})(t,e),A(n)})(t,n))),e},h=t=>{const e=JSON.parse(localStorage.getItem("Projects")),n=document.querySelector("#project-title").textContent;return e.find((t=>t.title==n)).tasks.findIndex((e=>e.title==t))},k=t=>{const e=t.target.parentElement.id.toString(),n=document.querySelector(`[id='${e}']`);if(!n)return;if(""==e)return;const o=(t=>{const e=JSON.parse(localStorage.getItem("Projects")),n=document.querySelector("#project-title").textContent;return e.find((t=>t.title==n)).tasks.find((e=>e.title===t))})(e);n.replaceWith((t=>{const e=document.createElement("div"),n=r(),o=c(),a=x(t),i=b(t),d=E(),s=S(t);return n.textContent=t.title,o.textContent=t.description,e.append(n,o,a,i,d,s),e})(o))};function I(){const t=document.querySelector("#main-content"),e=document.createElement("div");t.replaceChildren();let n=[];return L(n),T(n,e),e.append(R()),t.append(e),t}const L=t=>{for(let e=0;e<=localStorage.length-1;e++){const n=JSON.parse(localStorage.getItem(localStorage.key(e)));if(!n.title)return;t.push(n)}return t.sort((function(t,e){return t.dateAdded<e.dateAdded?-1:t.dateAdded>e.dateAdded?1:0})),t},T=(t,e)=>{for(let n=0;n<t.length;n++){const o=j(t[n]);e.append(o)}return e},j=e=>{const n=document.createElement("div");n.id=e.title,n.addEventListener("click",(t=>q(t)));const o=document.createElement("div"),r=document.createElement("div"),c=document.createElement("div"),a=document.createElement("div"),i=document.createElement("input");return i.type="checkbox",i.addEventListener("click",(e=>(e=>{const n=document.querySelector("#main-content"),o=localStorage.getItem(e.target.parentElement.id);localStorage.removeItem(e.target.parentElement.id),t(o),n.replaceChildren(),I()})(e))),o.innerHTML=`Task:${e.title}`,r.innerHTML=`details:${e.description}`,c.textContent=`Due date:${e.dueDate}`,a.textContent=`Priority:${e.priority}`,n.append(i,o,r,c,a),n},q=t=>{const e=t.target.parentElement.id,n=JSON.parse(localStorage.getItem(e));if(!n)return;const o=t.target.parentElement,r=B(n);o.replaceWith(r)},B=t=>{const e=document.createElement("div");return e.append(N(t),P(t),O(t),D(t),J(t),w()),e},N=t=>{const e=r();return e.textContent=t.title,e},P=t=>{const e=c();return e.textContent=t.description,e},O=t=>{const e=a();return e.querySelector("input").value=t.dueDate,e},D=t=>b(t),w=()=>{const t=document.createElement("button");return t.type="button",t.textContent="Cancel",t.addEventListener("click",(()=>I())),t},J=t=>{const e=document.createElement("button");return e.type="button",e.textContent="Submit",e.addEventListener("click",(()=>$(t))),e},$=t=>{console.log(t);const e=document.querySelector('[data-text="Task Name"]').textContent,n=document.querySelector('[data-text="Task Description"]').textContent,o=document.querySelector('input[type="date"]').value,r=document.querySelector(".active-button");if(t.title=e,t.description=n,!e)return displayTasksInProject(projectName),alert("Input a task name");t.dueDate?t.dueDate=o:t.dueDate="no due date",t.priority=r?r.textContent:"no priority set",M(t),I()},M=t=>{localStorage.setItem(t.title,JSON.stringify(t))},Z=()=>{I()},H=(t,e)=>{const n=document.createElement("div");n.id="add-project-input";const o=document.createElement("input");o.id="input-project-name";const r=document.createElement("button");r.addEventListener("click",(()=>((t,e,n)=>{const o=localStorage.getItem("Projects"),r=t.value;if(!r)return alert("Project name can't be empty");if(o){const t=JSON.parse(o);if(1==t.some((t=>t.title==r)))return alert("Project name already exist!");const e={title:r,tasks:[]};localStorage.setItem("Projects",JSON.stringify([...t,e]))}else localStorage.setItem("Projects",JSON.stringify([{title:r,tasks:[]}]));v(),p(r),A(r),e.replaceWith(n)})(o,n,e))),r.textContent="add";const c=document.createElement("button");c.textContent="cancel",c.addEventListener("click",(()=>((t,e)=>{t.replaceWith(e)})(n,e))),n.textContent="Project Name:",n.append(o,r,c),t.target.replaceWith(n)};function W(){const t=document.createElement("div");return t.textContent="Add Project",t.id="add-project",t.addEventListener("click",(e=>H(e,t))),t}function R(){const t=document.createElement("div");return t.textContent="Add a Task",t.classList.add("add-task"),t.addEventListener("click",o),t}var U=n(379),z=n.n(U),F=n(795),_=n.n(F),V=n(569),X=n.n(V),G=n(565),K=n.n(G),Q=n(216),Y=n.n(Q),tt=n(589),et=n.n(tt),nt=n(158),ot={};ot.styleTagTransform=et(),ot.setAttributes=K(),ot.insert=X().bind(null,"head"),ot.domAPI=_(),ot.insertStyleElement=Y(),z()(nt.Z,ot),nt.Z&&nt.Z.locals&&nt.Z.locals;var rt=n(663),ct={};ct.styleTagTransform=et(),ct.setAttributes=K(),ct.insert=X().bind(null,"head"),ct.domAPI=_(),ct.insertStyleElement=Y(),z()(rt.Z,ct),rt.Z&&rt.Z.locals&&rt.Z.locals;var at=n(209),it={};it.styleTagTransform=et(),it.setAttributes=K(),it.insert=X().bind(null,"head"),it.domAPI=_(),it.insertStyleElement=Y(),z()(at.Z,it),at.Z&&at.Z.locals&&at.Z.locals,function(){document.body.replaceChildren();const t=document.querySelector("body"),e=document.createElement("main");e.append(function(){const t=document.createElement("div");t.id="sidebar";const e=document.createElement("div");e.textContent="Home",e.id="sidebarHome",e.addEventListener("click",Z);const n=document.createElement("div");n.textContent="Today";const o=document.createElement("div");o.textContent="Week";const r=document.createElement("div");return r.textContent="Projects",r.id="sidebar-projects",r.append(W()),t.append(e,n,o,r),t}(),function(){const t=document.createElement("div");return t.id="main-content",t.replaceChildren(),t}()),t.append(function(){const t=document.createElement("header"),e=document.createElement("div");return e.textContent=" To-do List",t.append(e),t}(),e,function(){const t=document.createElement("footer");return t.textContent="copyright 2023",t}()),I()}(),I(),v()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,