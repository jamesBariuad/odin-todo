(()=>{"use strict";var e={663:(e,t,n)=>{n.d(t,{Z:()=>i});var o=n(537),r=n.n(o),c=n(645),a=n.n(c)()(r());a.push([e.id,'[contentEditable="true"]:empty:not(:focus):before {\n  content: attr(data-text);\n}\n\n.active-button{\n    background-color: red;\n}\n',"",{version:3,sources:["webpack://./src/assets/css/handleAddTask.css"],names:[],mappings:"AAAA;EACE,wBAAwB;AAC1B;;AAEA;IACI,qBAAqB;AACzB",sourcesContent:['[contentEditable="true"]:empty:not(:focus):before {\n  content: attr(data-text);\n}\n\n.active-button{\n    background-color: red;\n}\n'],sourceRoot:""}]);const i=a},158:(e,t,n)=>{n.d(t,{Z:()=>i});var o=n(537),r=n.n(o),c=n(645),a=n.n(c)()(r());a.push([e.id,"*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody{\n    background-color: green;\n    min-height: 100vh;\n    display: grid;\n    grid-template-columns: 2fr 10fr;\n    grid-template-rows: 1fr 10fr 1fr;\n}\n\nheader{\n    grid-column: span 2;\n}\n\nmain{\n    display: grid;\n    grid-template-columns: 300px  1fr;\n    grid-column: span 2;\n}\n\n#sidebar{\n display: grid;\n grid-auto-rows: 50px;\n\n /* gap: 10px; */\n}\n\nfooter{\n    margin-top: auto;\n}","",{version:3,sources:["webpack://./src/assets/css/layout.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,uBAAuB;IACvB,iBAAiB;IACjB,aAAa;IACb,+BAA+B;IAC/B,gCAAgC;AACpC;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,iCAAiC;IACjC,mBAAmB;AACvB;;AAEA;CACC,aAAa;CACb,oBAAoB;;CAEpB,eAAe;AAChB;;AAEA;IACI,gBAAgB;AACpB",sourcesContent:["*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody{\n    background-color: green;\n    min-height: 100vh;\n    display: grid;\n    grid-template-columns: 2fr 10fr;\n    grid-template-rows: 1fr 10fr 1fr;\n}\n\nheader{\n    grid-column: span 2;\n}\n\nmain{\n    display: grid;\n    grid-template-columns: 300px  1fr;\n    grid-column: span 2;\n}\n\n#sidebar{\n display: grid;\n grid-auto-rows: 50px;\n\n /* gap: 10px; */\n}\n\nfooter{\n    margin-top: auto;\n}"],sourceRoot:""}]);const i=a},209:(e,t,n)=>{n.d(t,{Z:()=>i});var o=n(537),r=n.n(o),c=n(645),a=n.n(c)()(r());a.push([e.id,"#pop-up {\n    position: absolute;\n    bottom: 5em;\n    left: 2em;\n}","",{version:3,sources:["webpack://./src/assets/css/taskCompletePopup.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,WAAW;IACX,SAAS;AACb",sourcesContent:["#pop-up {\n    position: absolute;\n    bottom: 5em;\n    left: 2em;\n}"],sourceRoot:""}]);const i=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,c){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(a[s]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);o&&a[l[0]]||(void 0!==c&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=c),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),c="/*# ".concat(r," */");return[t].concat([c]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var c={},a=[],i=0;i<e.length;i++){var s=e[i],d=o.base?s[0]+o.base:s[0],l=c[d]||0,u="".concat(d," ").concat(l);c[d]=l+1;var m=n(u),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==m)t[m].references++,t[m].updater(p);else{var v=r(p,o);o.byIndex=i,t.splice(i,0,{identifier:u,updater:v,references:1})}a.push(u)}return a}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var c=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<c.length;a++){var i=n(c[a]);t[i].references--}for(var s=o(e,r),d=0;d<c.length;d++){var l=n(c[d]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}c=s}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var c=n.sourceMap;c&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(c))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var c=t[o]={id:o,exports:{}};return e[o](c,c.exports,n),c.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{const e=e=>{document.querySelector("main-content");const n=document.createElement("div");n.id="pop-up",n.textContent="1 task completed!   ";const o=document.createElement("span");o.textContent="undo",o.addEventListener("click",(()=>((e,n)=>{console.log(JSON.parse(e));const o=JSON.parse(e);localStorage.setItem(o.title,e),t(),n.remove()})(e,n))),n.append(o),setTimeout((()=>{n.remove()}),2e3),document.body.append(n)};function t(){const e=document.querySelector("#main-content");let t=[];return e.replaceChildren(),o(t),r(t,e),e.append(I()),e}const o=e=>{for(let t=0;t<=localStorage.length-1;t++){const n=JSON.parse(localStorage.getItem(localStorage.key(t)));if(!n.title)return;e.push(n)}return e.sort((function(e,t){return e.dateAdded<t.dateAdded?-1:e.dateAdded>t.dateAdded?1:0})),e},r=(e,t)=>{for(let n=0;n<e.length;n++){const o=c(e[n]);t.append(o)}return t},c=n=>{const o=document.createElement("div");o.id=n.title;const r=document.createElement("div"),c=document.createElement("div"),a=document.createElement("div"),i=document.createElement("div"),s=document.createElement("input");return s.type="checkbox",s.addEventListener("click",(n=>(n=>{const o=document.querySelector("#main-content"),r=localStorage.getItem(n.target.parentElement.id);localStorage.removeItem(n.target.parentElement.id),e(r),o.replaceChildren(),t()})(n))),r.innerHTML=`Task:${n.title}`,c.innerHTML=`details:${n.description}`,a.textContent=`Due date:${n.dueDate}`,i.textContent=`Priority:${n.priority}`,o.append(s,r,c,a,i),o},a=(e,t,n,o,r)=>({title:e,description:t,dueDate:n,priority:o,dateAdded:r});function i(){const e=document.querySelector(".add-task"),t=document.createElement("div");return t.id="task-form",t.append(s(),d(),l(),u(),p(),v()),e.replaceWith(t),e}const s=()=>{const e=document.createElement("div");return e.setAttribute("contentEditable","true"),e.setAttribute("data-text","Task Name"),e},d=()=>{const e=document.createElement("div");return e.setAttribute("contentEditable","true"),e.setAttribute("data-text","Task Description"),e},l=()=>{let e="";const t=document.createElement("div");t.textContent="Due Date:";const n=document.createElement("input");return n.setAttribute("type","date"),n.addEventListener("change",(t=>(t=>{e=t.target.value})(t))),t.append(n),t},u=()=>{const e=document.createElement("div");e.textContent="Priority:";const t=document.createElement("button"),n=document.createElement("button"),o=document.createElement("button");t.textContent="low",n.textContent="medium",o.textContent="high";const r=e=>{let r="";return t.classList.remove("active-button"),n.classList.remove("active-button"),o.classList.remove("active-button"),"low"==e.target.innerText?t.classList.add("active-button"):"medium"==e.target.innerText?n.classList.add("active-button"):o.classList.add("active-button"),r=e.target.innerText,r};return t.addEventListener("click",(e=>r(e))),n.addEventListener("click",(e=>r(e))),o.addEventListener("click",(e=>r(e))),e.append(t,n,o),e},m=()=>{const e=document.querySelector("#main-content"),n=document.querySelector('[data-text="Task Name"]'),o=document.querySelector('[data-text="Task Description"]'),r=document.querySelector('input[type="date"]'),c=document.querySelector('button[class="active-button"]');let i="",s="";if(!n.innerHTML)return alert("please fill Task Name field");if(i=r.value?r.value:"no due date",s=c?c.innerHTML:"no priority set",null!==localStorage.getItem(`${n.innerHTML}`))return alert(`Task ${n.innerHTML} already exist!`);const d=(new Date).toISOString(),l=a(`${n.textContent}`,`${o.textContent}`,`${i}`,`${s}`,d);localStorage.setItem(`${n.textContent}`,JSON.stringify(l)),e.replaceChildren(),t()},p=()=>{const e=document.createElement("button");return e.textContent="add",e.addEventListener("click",m),e},v=()=>{const e=document.createElement("button");return e.textContent="cancel",e.addEventListener("click",(()=>{const e=I();document.querySelector("#task-form").replaceWith(e)})),e},A=(e,t)=>{document.querySelector("main-content");const n=document.createElement("div");n.id="pop-up",n.textContent="1 task completed!   ";const o=document.createElement("span");o.textContent="undo",o.addEventListener("click",(()=>((e,t,n)=>{const o=document.querySelector("#project-title").textContent,r=JSON.parse(localStorage.getItem("Projects")),c=r.findIndex((e=>e.title==o));r[c].tasks.splice(n,0,e),localStorage.setItem("Projects",JSON.stringify(r)),t.remove(),E(o)})(e,n,t))),n.append(o),setTimeout((()=>{n.remove()}),2e3),document.body.append(n)},f=()=>{const e=document.createElement("input");return e.type="checkbox",e.addEventListener("click",(e=>(e=>{const t=document.querySelector("#project-title").textContent,n=e.target.parentElement.id,o=JSON.parse(localStorage.getItem("Projects")),r=o.findIndex((e=>e.title==t)),c=o[r],a=c.tasks.findIndex((e=>e.title==n)),i=c.tasks[a];c.tasks.splice(a,1),localStorage.setItem("Projects",JSON.stringify(o)),E(t),A(i,a)})(e))),e},g=e=>{const t=document.querySelector("#main-content"),n=document.createElement("div");return n.id="project-title",n.textContent=e,t.replaceChildren(),t.append(n),t},C=()=>{const e=document.querySelector("#sidebar-projects"),t=JSON.parse(localStorage.getItem("Projects"));if(t){e.replaceChildren(),e.textContent="Projects";for(let n=0;n<t.length;n++){const o=document.createElement("div");o.textContent=t[n].title,e.append(o),o.addEventListener("click",(e=>{return t=e.target.textContent,g(t),void E(t);var t}))}e.append(k())}},y=()=>{const e=document.querySelector("#project-title"),t=document.querySelector('[data-text="Task Name"]'),n=document.querySelector('[data-text="Task Description"]'),o=document.querySelector('input[type="date"]'),r=document.querySelector('button[class="active-button"]');let c="",i="";c=o.value?o.value:"no due date",i=r?r.innerHTML:"no priority set";const s=(new Date).toISOString(),d=a(`${t.textContent}`,`${n.textContent}`,`${c}`,`${i}`,s);b(d),E(e.textContent)},b=e=>{const t=JSON.parse(localStorage.getItem("Projects")),n=document.querySelector("#project-title").textContent,o=t.findIndex((e=>e.title==n)),r=t[o].tasks;r.push(e),console.log(r),t[o].tasks=r,localStorage.setItem("Projects",JSON.stringify(t))},E=e=>{const t=document.querySelector("#main-content");t.replaceChildren(),g(e);const n=document.createElement("div"),o=JSON.parse(localStorage.getItem("Projects"));if(!o)return console.log(o,h()),t.append(h());const r=o.map((e=>e.title)).indexOf(e),c=o[r];for(let e=0;e<c.tasks.length;e++)n.append(x(c.tasks[e]));t.append(n,h())},x=e=>{const t=document.createElement("div");t.id=e.title;const n=document.createElement("div"),o=document.createElement("div"),r=document.createElement("div"),c=document.createElement("div"),a=f();return n.innerHTML=`Task:${e.title}`,o.innerHTML=`details:${e.description}`,r.textContent=`Due date:${e.dueDate}`,c.textContent=`Priority:${e.priority}`,t.append(a,n,o,r,c),t},h=()=>{const e=document.createElement("div");e.textContent="Add a task",e.id="add-task";const t=document.createElement("div");return t.id="task-form",e.addEventListener("click",(()=>e.replaceWith(t))),t.append(s(),d(),l(),u(),(()=>{const e=document.createElement("button");return e.type="button",e.textContent="Add",e.addEventListener("click",y),e})(),((e,t)=>{const n=document.createElement("button");n.type="button",n.textContent="cancel",n.addEventListener("click",(()=>o(e,t)));const o=(e,t)=>{t.replaceWith(e)};return n})(e,t)),e},S=(e,t)=>{const n=document.createElement("div");n.id="add-project-input";const o=document.createElement("input");o.id="input-project-name";const r=document.createElement("button");r.addEventListener("click",(()=>((e,t,n)=>{const o=localStorage.getItem("Projects"),r=e.value;if(!r)return alert("Project name can't be empty");if(o){const e=JSON.parse(o);if(1==e.some((e=>e.title==r)))return alert("Project name already exist!");const t={title:r,tasks:[]};localStorage.setItem("Projects",JSON.stringify([...e,t]))}else localStorage.setItem("Projects",JSON.stringify([{title:r,tasks:[]}]));C(),g(r),E(r),t.replaceWith(n)})(o,n,t))),r.textContent="add";const c=document.createElement("button");c.textContent="cancel",c.addEventListener("click",(()=>((e,t)=>{e.replaceWith(t)})(n,t))),n.textContent="Project Name:",n.append(o,r,c),e.target.replaceWith(n)};function k(){const e=document.createElement("div");return e.textContent="Add Project",e.id="add-project",e.addEventListener("click",(t=>S(t,e))),e}function I(){const e=document.createElement("div");return e.textContent="Add a Task",e.classList.add("add-task"),e.addEventListener("click",i),e}var T=n(379),L=n.n(T),j=n(795),B=n.n(j),P=n(569),q=n.n(P),N=n(565),O=n.n(N),w=n(216),$=n.n(w),M=n(589),J=n.n(M),Z=n(158),D={};D.styleTagTransform=J(),D.setAttributes=O(),D.insert=q().bind(null,"head"),D.domAPI=B(),D.insertStyleElement=$(),L()(Z.Z,D),Z.Z&&Z.Z.locals&&Z.Z.locals;var H=n(663),W={};W.styleTagTransform=J(),W.setAttributes=O(),W.insert=q().bind(null,"head"),W.domAPI=B(),W.insertStyleElement=$(),L()(H.Z,W),H.Z&&H.Z.locals&&H.Z.locals;var R=n(209),U={};U.styleTagTransform=J(),U.setAttributes=O(),U.insert=q().bind(null,"head"),U.domAPI=B(),U.insertStyleElement=$(),L()(R.Z,U),R.Z&&R.Z.locals&&R.Z.locals,function(){document.body.replaceChildren();const e=document.querySelector("body"),n=document.createElement("main");n.append(function(){const e=document.createElement("div");e.id="sidebar";const t=document.createElement("div");t.textContent="Home";const n=document.createElement("div");n.textContent="Today";const o=document.createElement("div");o.textContent="Week";const r=document.createElement("div");return r.textContent="Projects",r.id="sidebar-projects",r.append(k()),e.append(t,n,o,r),e}(),function(){const e=document.createElement("div");return e.id="main-content",e.replaceChildren(),e}()),e.append(function(){const e=document.createElement("header"),t=document.createElement("div");return t.textContent=" To-do List",e.append(t),e}(),n,function(){const e=document.createElement("footer");return e.textContent="copyright 2023",e}()),t()}(),t(),C()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,